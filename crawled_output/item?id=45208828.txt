The unreasonable effectiveness of modern sort algorithms | Hacker NewsHacker Newsnew | past | comments | ask | show | jobs | submitloginThe unreasonable effectiveness of modern sort algorithms (github.com/voultapher)16 points by Voultapher 4 hours ago
| hide | past | favorite | 4 comments
Epa095 59 minutes ago
| next [–]
Double jaw-drop. First when the (dynamic) match was slower than the hash map, second when sort_unstable was faster than the hash map!Cool article. It's clear that all my theoretical algorithm-knowledge comes short when faced with real CPUs.replyconradludgate 1 hour ago
| prev | next [–]
The efforts of developing better sorting algorithms like driftsort/ipnsort and better hash functions like foldhash make my life as developer so much simpler. No matter how clever I try to be, most often just using foldhash hashmap or a sort_unstable is the fastest optionreplyDennisL123 1 hour ago
| prev [–]
Efficiency, not effectiveness. They are all effective in the sense that they produce sorted results. Even the non-modern sort algorithms are effective in the sense that the results are correct. This should be about the efficiency with which they do it, right?replyaabhay 11 minutes ago
| parent [–]
Agreed. Effectiveness would imply that some algorithms are more likely to sort the list correctly than others, or they sort a higher percentage of elements. Efficiency is about factors external to the correctnessreply
Guidelines | FAQ | Lists | API | Security | Legal | Apply to YC | Contact
Search: