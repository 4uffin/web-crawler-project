Add JavaScript to your web page - HTML | MDN
Skip to main content
Skip to search
MDN
HTML
HTML: Markup language
HTML reference
Elements
Global attributes
Attributes
See allâ¦
HTML guides
Responsive images
HTML cheatsheet
Date & time formats
See allâ¦
Markup languages
SVG
MathML
XML
CSS
CSS: Styling language
CSS reference
Properties
Selectors
At-rules
Values & units
See allâ¦
CSS guides
Box model
Animations
Flexbox
Colors
See allâ¦
Layout cookbook
Column layouts
Centering an element
Card component
See allâ¦
JavaScript
JS
JavaScript: Scripting language
JS reference
Standard built-in objects
Expressions & operators
Statements & declarations
Functions
See allâ¦
JS guides
Control flow & error handing
Loops and iteration
Working with objects
Using classes
See allâ¦
Web APIs
Web APIs: Programming interfaces
Web API reference
File system API
Fetch API
Geolocation API
HTML DOM API
Push API
Service worker API
See allâ¦
Web API guides
Using the Web animation API
Using the Fetch API
Working with the History API
Using the Web speech API
Using web workers
All
All web technology
Technologies
Accessibility
HTTP
URI
Web extensions
WebAssembly
WebDriver
See allâ¦
Topics
Media
Performance
Privacy
Security
Progressive web apps
Learn
Learn web development
Frontend developer course
Getting started
Common questions
Curriculum
Learn HTML
Introduction to HTML
Getting started with HTML
Learn CSS
What is CSS
Getting started with CSS
Learn JavaScript
How to use data attributes
Add JavaScript to your web page
Tools
Discover our tools
Playground
HTTP Observatory
Border-image generator
Border-radius generator
Box-shadow generator
Color mixer
Color picker
Shape generator
About
Get to know MDN better
About MDN
Advertise with us
Community
MDN on GitHub
Blog
Web
HTML
How to
Add JavaScript
Add JavaScript to your web page
Take your webpages to the next level by harnessing JavaScript. Learn in this article how to trigger JavaScript right from your HTML documents.
Prerequisites:
You need to be familiar with how to
create a basic HTML document.
Objective:
Learn how to trigger JavaScript in your HTML file, and learn the most
important best practices for keeping JavaScript accessible.
In this article
About JavaScriptHow to trigger JavaScript from HTMLUse scripting accessiblyLearn more
About JavaScript
JavaScript is a programming language mostly used client-side to make webpages interactive. You can create amazing webpages without JavaScript, but JavaScript opens up a whole new level of possibilities.
Note:
In this article we're going over the HTML code you need to make JavaScript take effect. If you want to learn JavaScript itself, you can start with our JavaScript basics article. If you already know something about JavaScript or if you have a background with other programming languages, we suggest you jump directly into our JavaScript Guide.
How to trigger JavaScript from HTML
Within a browser, JavaScript doesn't do anything by itself. You run JavaScript from inside your HTML webpages. To call JavaScript code from within HTML, you need the <script> element. There are two ways to use script, depending on whether you're linking to an external script or embedding a script right in your webpage.
Linking an external script
Usually, you'll be writing scripts in their own .js files. If you want to execute a .js script from your webpage, just use <script> with an src attribute pointing to the script file, using its URL:
html<script src="path/to/my/script.js"></script>
Writing JavaScript within HTML
You may also add JavaScript code between <script> tags rather than providing an src attribute.
html<script>
console.log("Some code");
</script>
That's convenient when you just need a small bit of JavaScript, but if you keep JavaScript in separate files you'll find it easier to
focus on your work
write self-sufficient HTML
write structured JavaScript applications
Note:
For both inline scripts and external scripts without the defer or async attributes, the script is executed immediately when the browser encounters the <script> element while parsing the HTML. This means that the script cannot access any HTML elements that appear later in the document. To access such elements, consider moving the script to the end of the document body (just before the closing </body> tag), or use the defer attribute on external scripts.
Use scripting accessibly
Accessibility is a major issue in any software development. JavaScript can make your website more accessible if you use it wisely, or it can become a disaster if you use scripting without care. To make JavaScript work in your favor, it's worth knowing about certain best practices for adding JavaScript:
Make all content available as (structured) text. Rely on HTML for your content as much as possible. For example, if you've implemented a nice JavaScript progress bar, make sure to supplement it with matching text percentages inside the HTML. Likewise, your drop-down menus should be structured as unordered lists of links.
Make all functionality accessible from the keyboard.
Let users Tab through all controls (e.g., links and form input) in a logical order.
If you use pointer events (like mouse events or touch events), duplicate the functionality with keyboard events.
Test your site using a keyboard only.
Don't set nor even guess time limits. It takes extra time to navigate with the keyboard or hear content read out. You can hardly ever predict just how long it will take for users or browsers to complete a process (especially asynchronous actions such as loading resources).
Keep animations subtle and brief with no flashing. Flashing is annoying and can cause seizures. Additionally, if an animation lasts more than a couple seconds, give the user a way to cancel it.
Let users initiate interactions. That means, don't update content, redirect, or refresh automatically. Don't use carousels or display popups without warning.
Have a plan B for users without JavaScript. People may have JavaScript turned off to improve speed and security, and users often face network issues that prevent loading scripts. Moreover, third-party scripts (ads, tracking scripts, browser extensions) might break your scripts.
At a minimum, leave a short message with <noscript> like this: <noscript>To use this site, please enable JavaScript.</noscript>
Ideally, replicate the JavaScript functionality with HTML and server-side scripting when possible.
If you're only looking for simple visual effects, CSS can often get the job done even more intuitively.
Since almost everybody does have JavaScript enabled, <noscript> is no excuse for writing inaccessible scripts.
Learn more
<script>
<noscript>
Writing JavaScript with Accessibility in Mind by Manuel Matuzovic (2017)
Accessibility guidelines from W3C
Help improve MDN
Learn how to contribute
This page was last modified on â¨Sep 11, 2025â© by MDN contributors.
View this page on GitHub â¢ Report a problem with this content
HTMLGuidesContent categoriesCommentsDate and time formatsConstraint validationViewport meta elementResponsive imagesMicrodataMicroformatsQuirks and standards modesHTML cheatsheetHow toDefine terms with HTMLUse data attributesUse cross-origin imagesAdd a hitmap on top of an imageAuthor fast-loading HTML pagesAdd JavaScriptReferenceElements<a><abbr><acronym>
Deprecated
<address><area><article><aside><audio><b><base><bdi><bdo><big>
Deprecated
<blockquote><body><br><button><canvas><caption><center>
Deprecated
<cite><code><col><colgroup><data><datalist><dd><del><details><dfn><dialog><dir>
Deprecated
<div><dl><dt><em><embed><fencedframe>
Experimental
<fieldset><figcaption><figure><font>
Deprecated
<footer><form><frame>
Deprecated
<frameset>
Deprecated
<h1><head><header><hgroup><hr><html><i><iframe><img><input><ins><kbd><label><legend><li><link><main><map><mark><marquee>
Deprecated
<menu><meta><meter><nav><nobr>
Deprecated
<noembed>
Deprecated
<noframes>
Deprecated
<noscript><object><ol><optgroup><option><output><p><param>
Deprecated
<picture><plaintext>
Deprecated
<pre><progress><q><rb>
Deprecated
<rp><rt><rtc>
Deprecated
<ruby><s><samp><script><search><section><select><selectedcontent>
Experimental
<slot><small><source><span><strike>
Deprecated
<strong><style><sub><summary><sup><table><tbody><td><template><textarea><tfoot><th><thead><time><title><tr><track><tt>
Deprecated
<u><ul><var><video><wbr><xmp>
Deprecated
AttributesacceptautocompletecapturecontentcrossorigindirnamedisabledelementtimingforformmaxmaxlengthminminlengthmultiplepatternplaceholderreadonlyrelrequiredsizestepGlobal attributesaccesskeyanchor
Experimental
Non-standard
autocapitalizeautocorrectautofocusclasscontenteditabledata-*dirdraggableenterkeyhintexportpartshiddenidinertinputmodeisitemiditempropitemrefitemscopeitemtypelangnoncepartpopoverslotspellcheckstyletabindextitletranslatevirtualkeyboardpolicy
Experimental
writingsuggestionsAttributes by element<input> type<input type="button"><input type="checkbox"><input type="color"><input type="date"><input type="datetime-local"><input type="email"><input type="file"><input type="hidden"><input type="image"><input type="month"><input type="number"><input type="password"><input type="radio"><input type="range"><input type="reset"><input type="search"><input type="submit"><input type="tel"><input type="text"><input type="time"><input type="url"><input type="week"><script> typeimportmapspeculationrules
Experimental
Non-standard
<meta> namecolor-schemereferrerrobotstheme-colorviewport<meta> http-equivAttribute valuesrel keywordsrel="alternate stylesheet"rel="compression-dictionary"
Experimental
rel="dns-prefetch"rel="manifest"rel="me"rel="modulepreload"rel="noopener"rel="noreferrer"rel="preconnect"rel=prefetchrel=preloadrel=prerender
Non-standard
Deprecated
Your blueprint for a better internet.
MDN
About
Blog
Mozilla careers
Advertise with us
MDN Plus
Product help
Contribute
MDN Community
Community resources
Writing guidelines
MDN Discord
MDN on GitHub
Developers
Web technologies
Learn web development
Guides
Tutorials
Glossary
Hacks blog
Website Privacy Notice
Cookies
Legal
Community Participation Guidelines
Visit Mozilla Corporationâs not-for-profit parent, the Mozilla Foundation.
Portions of this content are Â©1998ââ¨2025â© by individual mozilla.org contributors. Content available under a Creative Commons license.