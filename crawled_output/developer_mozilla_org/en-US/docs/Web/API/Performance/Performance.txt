Performance - Web APIs | MDN
Skip to main content
Skip to search
MDN
HTML
HTML: Markup language
HTML reference
Elements
Global attributes
Attributes
See allâ¦
HTML guides
Responsive images
HTML cheatsheet
Date & time formats
See allâ¦
Markup languages
SVG
MathML
XML
CSS
CSS: Styling language
CSS reference
Properties
Selectors
At-rules
Values & units
See allâ¦
CSS guides
Box model
Animations
Flexbox
Colors
See allâ¦
Layout cookbook
Column layouts
Centering an element
Card component
See allâ¦
JavaScript
JS
JavaScript: Scripting language
JS reference
Standard built-in objects
Expressions & operators
Statements & declarations
Functions
See allâ¦
JS guides
Control flow & error handing
Loops and iteration
Working with objects
Using classes
See allâ¦
Web APIs
Web APIs: Programming interfaces
Web API reference
File system API
Fetch API
Geolocation API
HTML DOM API
Push API
Service worker API
See allâ¦
Web API guides
Using the Web animation API
Using the Fetch API
Working with the History API
Using the Web speech API
Using web workers
All
All web technology
Technologies
Accessibility
HTTP
URI
Web extensions
WebAssembly
WebDriver
See allâ¦
Topics
Media
Performance
Privacy
Security
Progressive web apps
Learn
Learn web development
Frontend developer course
Getting started
Common questions
Curriculum
Learn HTML
Introduction to HTML
Getting started with HTML
Learn CSS
What is CSS
Getting started with CSS
Learn JavaScript
How to use data attributes
Add JavaScript to your web page
Tools
Discover our tools
Playground
HTTP Observatory
Color picker
Box-shadow generator
Border-image generator
Border-radius generator
About
Get to know MDN better
About MDN
Advertise with us
Community
MDN on GitHub
Blog
Web
Web APIs
Performance
Performance
Baseline
Widely available
*
This feature is well established and works across many devices and browser versions. Itâs been available across browsers since â¨September 2015â©.
* Some parts of this feature may have varying levels of support.
Learn more
See full compatibility
Report feedback
Note: This feature is available in Web Workers.
The Performance interface provides access to performance-related information for the current page.
Performance entries are specific to each execution context. You can access performance information for code running in a window via Window.performance, and for code running in a worker via WorkerGlobalScope.performance.
EventTarget
Performance
In this article
Instance propertiesInstance methodsEventsSpecificationsBrowser compatibility
Instance properties
The Performance interface doesn't inherit any properties.
Performance.eventCounts Read only
An EventCounts map containing the number of events which have been dispatched per event type.
Performance.navigation Read only
Deprecated
A legacy PerformanceNavigation object that provides useful context about the operations included in the times listed in timing, including whether the page was a load or a refresh, how many redirections occurred, and so forth.
Performance.timing Read only
Deprecated
A legacy PerformanceTiming object containing latency-related performance information.
Performance.memory Read only
Non-standard
Deprecated
A non-standard extension added in Chrome, this property provides an object with basic memory usage information. You should not use this non-standard API.
Performance.timeOrigin Read only
Returns the high resolution timestamp of the start time of the performance measurement.
Instance methods
The Performance interface doesn't inherit any methods.
Performance.clearMarks()
Removes the given mark from the browser's performance entry buffer.
Performance.clearMeasures()
Removes the given measure from the browser's performance entry buffer.
Performance.clearResourceTimings()
Removes all performance entries with a entryType of "resource" from the browser's performance data buffer.
Performance.getEntries()
Returns a list of PerformanceEntry objects based on the given filter.
Performance.getEntriesByName()
Returns a list of PerformanceEntry objects based on the given name and entry type.
Performance.getEntriesByType()
Returns a list of PerformanceEntry objects of the given entry type.
Performance.mark()
Creates a timestamp in the browser's performance entry buffer with the given name.
Performance.measure()
Creates a named timestamp in the browser's performance entry buffer between two specified marks (known as the start mark and end mark, respectively).
Performance.measureUserAgentSpecificMemory()
Experimental
Estimates the memory usage of a web application including all its iframes and workers.
Performance.now()
Returns a DOMHighResTimeStamp representing the number of milliseconds elapsed since a reference instant.
Performance.setResourceTimingBufferSize()
Sets the browser's resource timing buffer size to the specified number of "resource" type PerformanceEntry objects.
Performance.toJSON()
Returns a JSON representation of the Performance object.
Events
Listen to these events using addEventListener() or by assigning an event listener to the oneventname property of this interface.
resourcetimingbufferfull
Fired when the browser's resource timing buffer is full.
Specifications
Specification
High Resolution Time# sec-performance
Performance Timeline# extensions-to-the-performance-interface
Resource Timing# sec-extensions-performance-interface
User Timing# extensions-performance-interface
Browser compatibility
Help improve MDN
Learn how to contribute
This page was last modified on â¨Jun 23, 2025â© by MDN contributors.
View this page on GitHub â¢ Report a problem with this content
Performance APIsPerformanceInstance propertieseventCountsmemory
Non-standard
Deprecated
navigation
Deprecated
timeOrigintiming
Deprecated
Instance methodsclearMarks()clearMeasures()clearResourceTimings()getEntries()getEntriesByName()getEntriesByType()mark()measure()measureUserAgentSpecificMemory()
Experimental
now()setResourceTimingBufferSize()toJSON()EventsresourcetimingbufferfullInheritanceEventTargetRelated pages for Performance APIEventCountsLargestContentfulPaintLayoutShift
Experimental
LayoutShiftAttribution
Experimental
NotRestoredReasonDetails
Experimental
NotRestoredReasons
Experimental
PerformanceElementTiming
Experimental
PerformanceEntryPerformanceEventTimingPerformanceLongAnimationFrameTiming
Experimental
PerformanceLongTaskTiming
Experimental
PerformanceMarkPerformanceMeasurePerformanceNavigation
Deprecated
PerformanceNavigationTimingPerformanceObserverPerformanceObserverEntryListPerformancePaintTimingPerformanceResourceTimingPerformanceScriptTiming
Experimental
PerformanceServerTimingPerformanceTiming
Deprecated
TaskAttributionTiming
Experimental
VisibilityStateEntry
Experimental
Window.performanceWorkerGlobalScope.performanceGuidesPerformance dataHigh precision timingLong animation frame timingResource timingNavigation timingUser timingServer timingMonitoring bfcache blocking reasons
Experimental
Your blueprint for a better internet.
MDN
About
Blog
Mozilla careers
Advertise with us
MDN Plus
Product help
Contribute
MDN Community
Community resources
Writing guidelines
MDN Discord
MDN on GitHub
Developers
Web technologies
Learn web development
Guides
Tutorials
Glossary
Hacks blog
Website Privacy Notice
Cookies
Legal
Community Participation Guidelines
Visit Mozilla Corporationâs not-for-profit parent, the Mozilla Foundation.
Portions of this content are Â©1998ââ¨2025â© by individual mozilla.org contributors. Content available under a Creative Commons license.