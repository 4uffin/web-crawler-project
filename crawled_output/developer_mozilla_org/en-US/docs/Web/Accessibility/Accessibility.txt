Accessibility | MDN
Skip to main content
Skip to search
MDN
HTML
HTML: Markup language
HTML reference
Elements
Global attributes
Attributes
See allâ¦
HTML guides
Responsive images
HTML cheatsheet
Date & time formats
See allâ¦
Markup languages
SVG
MathML
XML
CSS
CSS: Styling language
CSS reference
Properties
Selectors
At-rules
Values & units
See allâ¦
CSS guides
Box model
Animations
Flexbox
Colors
See allâ¦
Layout cookbook
Column layouts
Centering an element
Card component
See allâ¦
JavaScript
JS
JavaScript: Scripting language
JS reference
Standard built-in objects
Expressions & operators
Statements & declarations
Functions
See allâ¦
JS guides
Control flow & error handing
Loops and iteration
Working with objects
Using classes
See allâ¦
Web APIs
Web APIs: Programming interfaces
Web API reference
File system API
Fetch API
Geolocation API
HTML DOM API
Push API
Service worker API
See allâ¦
Web API guides
Using the Web animation API
Using the Fetch API
Working with the History API
Using the Web speech API
Using web workers
All
All web technology
Technologies
Accessibility
HTTP
URI
Web extensions
WebAssembly
WebDriver
See allâ¦
Topics
Media
Performance
Privacy
Security
Progressive web apps
Learn
Learn web development
Frontend developer course
Getting started
Common questions
Curriculum
Learn HTML
Introduction to HTML
Getting started with HTML
Learn CSS
What is CSS
Getting started with CSS
Learn JavaScript
How to use data attributes
Add JavaScript to your web page
Tools
Discover our tools
Playground
HTTP Observatory
Border-image generator
Border-radius generator
Box-shadow generator
Color mixer
Color picker
Shape generator
About
Get to know MDN better
About MDN
Advertise with us
Community
MDN on GitHub
Blog
Web
Accessibility
Accessibility
Accessibility (often abbreviated to A11y â as in, "a", then 11 characters, and then "y") in web development means enabling as many people as possible to use websites, even when those people's abilities are limited in some way.
For many people, technology makes things easier. For people with disabilities, technology makes things possible. Accessibility means developing content to be as accessible as possible, no matter an individual's physical and cognitive abilities and how they access the web.
The Web is fundamentally designed to work for all people, whatever their hardware, software, language, location, or ability.
When the Web meets this goal, it is accessible to people with a diverse range of hearing, movement, sight, and cognitive ability.
â (W3C - Accessibility)
In this article
Accessibility guidesTutorials for beginnersReferencesSee also
Accessibility guides
The Accessibility guides cover authoring principles, WCAG compliance, accessible widgets and navigation, mobile accessibility, and other key topics that will help you understand why accessibility is crucial for the web and how to improve it in your projects.
Accessibility information for web authors
This document lists guidelines and regulations, how-to's, and tools for checking and repairing accessibility problems with websites.
Personalization to help browse safely
This article discusses making web content accessible for those with vestibular disorders, and those who support them, by taking advantage of personalization and accessibility settings built into the operating systems.
Accessible web applications and widgets
Most JavaScript libraries offer a library of client-side widgets that mimic the behavior of familiar desktop interfaces.
While this results in a widget that looks like its desktop counterpart, there usually isn't enough semantic information in the markup to be usable by an assistive technology.
This document describes techniques to improve accessibility of such widgets.
Keyboard-navigable JavaScript widgets
Until now, web developers who wanted to make their styled <div> and <span> based widgets accessible have lacked proper techniques.
Keyboard accessibility is part of the minimum accessibility requirements, which a developer should be aware of.
This document describes techniques to make JavaScript widgets accessible with the keyboard.
Mobile accessibility checklist
This document provides a concise checklist of accessibility requirements for mobile app developers.
Understanding the Web Content Accessibility Guidelines (WCAG)
A set of articles that provide quick explanations to help you understand the steps that need to be taken to conform to the recommendations outlined in the Web Content Accessibility Guidelines (WCAG).
Cognitive accessibility
Cognitive accessibility covers accessibility considerations for people with cognition and learning disabilities.
This document introduces cognitive accessibility and improving accessibility of the web for people with cognitive and learning differences.
Accessibility and spatial patterns
This document describes visual patterns that can induce physical symptoms in people who have photosensitive epilepsy, vestibular disorders, or other perceptual issues.
Web Accessibility: Understanding Colors and Luminance
While understanding color, luminance, and saturation is important for design and readability for all sighted users, they are essential for those with reduced vision and color-deficient vision and those with specific neurological, cognitive, and other impairments.
Web accessibility for seizures and physical reactions
Some types of visual web content can induce seizures in people with certain brain disorders.
This article helps you understand the types of content that can be problematic and find tools and strategies to help you avoid them.
ARIA
This is a collection of articles to learn how to use Accessible Rich Internet Applications (ARIA) to make your HTML documents more accessible.
Tutorials for beginners
The MDN Accessibility Learning Area contains modern, up-to-date tutorials covering the following accessibility essentials:
What is accessibility?
This article starts off the module with a good look at what accessibility actually is â this includes what groups of people we need to consider and why, what tools different people use to interact with the Web, and how we can make accessibility part of our web development workflow.
HTML: A good basis for accessibility
A great deal of web content can be made accessible just by making sure that the correct HTML elements are used for the correct purpose at all times. This article looks in detail at how HTML can be used to ensure maximum accessibility.
CSS and JavaScript accessibility best practices
CSS and JavaScript, when used properly, also have the potential to allow for accessible web experiences. They can significantly harm accessibility if misused. This article outlines some CSS and JavaScript best practices that should be considered to ensure that even complex content is as accessible as possible.
WAI-ARIA basics
Following on from the previous article, sometimes making complex UI controls that involve unsemantic HTML and dynamic JavaScript-updated content can be difficult. WAI-ARIA is a technology that can help with such problems by adding in further semantics that browsers and assistive technologies can recognize and let users know what is going on. Here we'll show how to use it at a basic level to improve accessibility.
Accessible multimedia
Another category of content that can create accessibility problems is multimedia â video, audio, and image content need to be given proper textual alternatives so that they can be understood by assistive technologies and their users. This article shows how.
Mobile accessibility
With web access on mobile devices being so popular and popular platforms such as iOS and Android having fully-fledged accessibility tools, it is important to consider the accessibility of your web content on these platforms. This article looks at mobile-specific accessibility considerations.
References
ARIA reference
Reference documentation for Accessible Rich Internet Applications (ARIA) attributes and roles.
See also
Developer guides
WAI Interest Group
Help improve MDN
Learn how to contribute
This page was last modified on â¨May 7, 2025â© by MDN contributors.
View this page on GitHub â¢ Report a problem with this content
AccessibilityGuidesInformation for web authorsPersonalization to help browse safelyAccessible web applications and widgetsKeyboard-navigable JavaScript widgetsMobile accessibility checklistCognitive accessibilitySpatial patternsColors and LuminancePreventing seizures and physical reactionsUnderstanding WCAGKeyboard accessibleOperablePerceivableRobustText labels and namesUnderstandableTutorials for beginnersWhat is accessibility?Accessibility toolsAccessible HTMLAccessible CSS and JSWAI-ARIAAccessible multimediaMobile accessibilityChallenge: A11y debuggingARIAARIA guidesARIA live regionsScreen reader implementors guideUsing ARIA: Roles, states, and propertiesUsing ARIA for labels with embedded fieldsHow toHow to file ARIA-related bugsARIA referenceAttributesaria-activedescendantaria-atomicaria-autocompletearia-braillelabelaria-brailleroledescriptionaria-busyaria-checkedaria-colcountaria-colindexaria-colindextextaria-colspanaria-controlsaria-currentaria-describedbyaria-descriptionaria-detailsaria-disabledaria-dropeffect
Deprecated
aria-errormessagearia-expandedaria-flowtoaria-grabbed
Deprecated
aria-haspopuparia-hiddenaria-invalidaria-keyshortcutsaria-labelaria-labelledbyaria-levelaria-livearia-modalaria-multilinearia-multiselectablearia-orientationaria-ownsaria-placeholderaria-posinsetaria-pressedaria-readonlyaria-relevantaria-requiredaria-roledescriptionaria-rowcountaria-rowindexaria-rowindextextaria-rowspanaria-selectedaria-setsizearia-sortaria-valuemaxaria-valueminaria-valuenowaria-valuetextRolesalertalertdialogapplicationarticlebannerbuttoncellcheckboxcolumnheadercomboboxcommandcommentcomplementarycompositecontentinfodefinitiondialogdirectory
Deprecated
documentfeedfigureformgenericgridgridcellgroupheadingimginputlandmarklinklistlistboxlistitemlogmainmarkmarqueemathmenumenubarmenuitemmenuitemcheckboxmenuitemradiometernavigationnonenoteoptionpresentationprogressbarradioradiogrouprangeregionroletyperowrowgrouprowheaderscrollbarsearchsearchboxsectionsectionheadselectseparatorsliderspinbuttonstatusStructuralstructuresuggestionswitchtabtabletablisttabpaneltermtextboxtimertoolbartooltiptreetreegridtreeitemwidgetwindow
Your blueprint for a better internet.
MDN
About
Blog
Mozilla careers
Advertise with us
MDN Plus
Product help
Contribute
MDN Community
Community resources
Writing guidelines
MDN Discord
MDN on GitHub
Developers
Web technologies
Learn web development
Guides
Tutorials
Glossary
Hacks blog
Website Privacy Notice
Cookies
Legal
Community Participation Guidelines
Visit Mozilla Corporationâs not-for-profit parent, the Mozilla Foundation.
Portions of this content are Â©1998ââ¨2025â© by individual mozilla.org contributors. Content available under a Creative Commons license.