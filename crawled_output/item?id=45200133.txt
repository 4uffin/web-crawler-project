Introduction to GrapheneOS | Hacker NewsHacker Newsnew | past | comments | ask | show | jobs | submitloginIntroduction to GrapheneOS (dataswamp.org)65 points by renehsz 4 hours ago
| hide | past | favorite | 42 comments
tietjens 3 minutes ago
| next [–]
Sincere question: what is the point of using this OS for privacy and then using Google services? The intro runs though how it’s very easy to do this. Maybe I’m missing something.replyelectric_muse 40 minutes ago
| prev | next [–]
I just bought a pixel from best buy to install gos, which was an ordeal.At checkout they looked at me like I was up to no good when I said I didn’t want to give them my name, address, and phone number just to purchase the device. I didn’t set up a plan. They said it was for “restocking” or something.Fortunately they accepted obviously fake info. These front line sales people just don’t care as long as they can say they followed the policy.The user containers are very helpful. I have to have TikTok for work and I put it in a container all by itself with a vpn on kill switch. And for one app that needs google play services, I have it a container with that.The duress passcode is super clever, too. You enter a different device passcode and it just wipes the device.replydosshell 5 minutes ago
| parent | next [–]
> I have to have TikTok for workI'm sorry but what? Your job demands what apps you have installed on your PRIVATE phone!?replycodethief 32 minutes ago
| parent | prev | next [–]
> The user containers are very helpfulYou mean different user accounts? Those are available on stock Android, too.replya0sud0a8s 23 minutes ago
| root | parent | next [–]
True, although on GrapheneOS, apps on different profiles can remain active when you switch and notifications can be sent to the primary profile if you choose.replyysnp 22 minutes ago
| root | parent | prev | next [–]
I think it depends on the Android distribution. I am not sure it is available on Samsung's One UI.replyyjftsjthsd-h 2 hours ago
| prev | next [–]
> GOS does not allow you to become root on your phone though, it just gives you more control through permissions and profiles.It really is sad that there isn't any ROM with Graphene's permission and sandboxing features while still leaving the user in control. IIRC it's theoretically possible since they publish the code, but one assumes it would be a non-trivial effort:\replycrapple8430 1 hour ago
| parent | next [–]
You can root GrapheneOS just fine. Moreover you can even re-lock the bootloader after rooting.See: github.com/chenxiaolong/avbrootreplycharcircuit 14 minutes ago
| parent | prev | next [–]
Giving the user control does not mean giving the user root. Giving root breaks Android security model. Whatever capability you want should be implemented as a proper feature to avoid breaking the security of the device.Equating control to root is an outdated way of thinking that comes from a time before the principle of least privilege existed. The way UNIX did things should not be put on a pedestal.replyranger_danger 2 hours ago
| parent | prev | next [–]
If you have the UI layer able to grant root access, it has root access itself and is not sandboxed. If the UI layer can grant it, an attacker gaining slight control over it has root access. An accessibility service trivially has root access. A keyboard can probably get root access, and so on. Instead of a tiny little portion of the OS having root access, a massive portion of it does.In the verified boot threat model, an attacker controls persistent state. If you have persistent root access as a possibility then verified boot doesn't work since persistent state is entirely trusted.A userdebug build of AOSP or GrapheneOS has a su binary and an adb root command providing root access via the Android Debug Bridge via physical access using USB. This does still significantly reduce security, particularly since ADB has a network mode that can be enabled. Most of the security model is still intact. This is not what people are referring to when they talk about rooting on Android, they are referring to granting root access to apps via the UI not using it via a shell.replycakealert 1 hour ago
| root | parent | next [–]
> If you have the UI layer able to grant root access, it has root access itself and is not sandboxed.The same is true even of an operating system such as QubesOS. And it's a minimal risk.Not providing optional root access on GOS makes it only useful if you have a constrained application in mind for the phone. I don't have time to compile GOS with root so I just use LineageOS instead.replybbarnett 52 minutes ago
| root | parent | next [–]
It's useful for general use just fine.But you could always do both.
Compile it, but preinstall a specific set of apps as root, no su.replyyjftsjthsd-h 2 hours ago
| root | parent | prev | next [–]
EDIT: This is a reply to the 2nd(?) version of your comment before it was silently changed into something different.Yes, I'm sure it is. But I don't consider that a tolerable tradeoff, and I believe we could have a system that has most of the best of both worlds.replyysnp 46 minutes ago
| root | parent | prev | next [–]
>This is not what people are referring to when they talk about rooting on AndroidWould this have been easier or more possible if Android had a full capability-based security model?replyyjftsjthsd-h 37 minutes ago
| root | parent | next [–]
Arguably Android has a capability-based security model, though it suffers from being ... well, it's not what you'd build if you were doing it from scratch today. Hindsight is 20/20. But I'd tentatively say not really, because the point of root is to get outside the existing capabilities. As an example: For a while, the most common root app I ran was one to limit charging to 80% or whatever to make the battery age more gracefully.[0] The whole reason that needed root is because there wasn't a capability/permission for that; the app couldn't ask the OS to let it control charging, because nobody even thought to expose that API surface.[0] This was later obsoleted by the OS adding that feature natively, which is an interesting angle to consider; directly supporting the things people root for definitely helps, but you're unlikely to ever get everything so it's not a panacea.replyysnp 30 minutes ago
| root | parent | next [–]
>This was later obsoleted by the OS adding that feature natively, which is an interesting angle to consider; directly supporting the things people root for definitely helps, but you're unlikely to ever get everything so it's not a panacea.For what it's worth, my understanding is that this has always been the position of GrapheneOS too. Given the resources and enough benefit/cost to allocate, the project would rather integrate or implement usability features at the OS level instead of encouraging people to expose attack surface. Specifically because GrapheneOS is a project meant to be primed to defend some of the most intimate and personal aspects of a person's life.replyyjftsjthsd-h 20 minutes ago
| root | parent | next [–]
Yeah, I definitely think it's an excellent goal to erode the cases that need root. It is a powerful escape hatch, and I think it's important that it exist, but it's also a good thing to not need it. The difference is that I don't believe the system will ever cover everything I want to do, so I consider that escape hatch to be really important.replyyjftsjthsd-h 1 hour ago
| root | parent | prev | next [–]
Quoting inline since parent has been rewritten multiple times now...> If you have the UI layer able to grant root access, it has root access itself and is not sandboxed. If the UI layer can grant it, an attacker gaining slight control over it has root access. An accessibility service trivially has root access. A keyboard can probably get root access, and so on. Instead of a tiny little portion of the OS having root access, a massive portion of it does.Android has an established way to handle permission dialogs that require the user to confirm their approval, including use of fingerprint/PIN/password to authenticate. If it's good enough to unlock and decrypt the device, it's good enough to control root access. Besides which, I think> An accessibility service trivially has root access.is hitting https://xkcd.com/1200/ ; an a11y service already has access to everything inside the sandbox (including all your sensitive data), and the system settings that control permissions and sandboxing.> In the verified boot threat model, an attacker controls persistent state. If you have persistent root access as a possibility then verified boot doesn't work since persistent state is entirely trusted.I'm tentatively willing to agree, but I don't see the point? 1. If an attacker controls persistent state, don't they already control all the other permissions, including what security domains exist and what permissions are given to apps. 2. You don't have to persist it; even just one-off root access is quite useful.> A userdebug build of AOSP or GrapheneOS has a su binary and an adb root command providing root access via the Android Debug Bridge via physical access using USB. This does still significantly reduce security, particularly since ADB has a network mode that can be enabled. Most of the security model is still intact. This is not what people are referring to when they talk about rooting on Android, they are referring to granting root access to apps via the UI not using it via a shell.Agreed, that's not what I want.replyranger_danger 1 hour ago
| root | parent | next [–]
> Android has an established way to handle permission dialogs that require the user to confirm their approvalWith the advent of choicejacking I don't think I want to trust permission dialogs anymore.> including use of fingerprint/PIN/password to authenticateIMO if you have the UI layer able to grant root access at all, even with requiring re-authentication, it still already has root access itself and is therefore not sandboxed.replyyjftsjthsd-h 58 minutes ago
| root | parent | next [–]
> With the advent of choicejacking I don't think I want to trust permission dialogs anymore.So you're using a version of Android patched to remove all permissions? After all, in your threat model all apps can get permission to use the microphone and camera, make phone calls, access fine-grained location information, read and write files at will, etc. Frankly, I'm not sure what they'd get out of root at this point.> IMO if you have the UI layer able to grant root access at all, even with requiring re-authentication, it still already has root access itself and is therefore not sandboxed.Likewise, surely this applies to any permission system, and every other permission. The system UI controls every other permission in the system; if we assume it compromised, then everything else is already lost.replycodethief 38 minutes ago
| root | parent | next [–]
> Frankly, I'm not sure what they'd get out of root at this point.A permission that allows them to hide that they have access to everything, including other apps' data?replyyjftsjthsd-h 33 minutes ago
| root | parent | next [–]
Possibly. Yes, hiding from auditing would be a possible advantage, but I think an app with accessibility permissions could already draw over the settings app to hide the real list of permissions from your view without root. Off the top of my head I think there's a whole mess of permissions needed to allow that, but we're discussing a threat model where permission dialogs can be effectively bypassed so that's no obstacle.replysubscribed 1 hour ago
| parent | prev | next [–]
Okay, but it's very easy for you to build and sign your own builds that provide root access to the user.I dint understand why you insist on this massive risk to be laid on on everyone.GOS publishes pretty detailed documentation. They don't explain step by step how to build an OS with root specifically, instead assuming that the users knowing the immense risks also have the skils they need to achieve it without handholding.replyyjftsjthsd-h 44 minutes ago
| root | parent | next [–]
> Okay, but it's very easy for you to build and sign your own builds that provide root access to the user.> GOS publishes pretty detailed documentation. They don't explain step by step how to build an OS with root specifically, instead assuming that the users knowing the immense risks also have the skils they need to achieve it without handholding.It really sounds like you call it very easy, then promptly turn around and say that it's not easy but that's okay because it should be hard. You're also conflating the ability to assess security risks with the ability to build Android from source and modify it in the process, even though these skills are mostly unrelated.> I dint understand why you insist on this massive risk to be laid on on everyone.Largely, I don't agree that it's a "massive risk" in the first place. I don't believe that user-controlled root access is a problem, and I certainly don't believe that a default-off option to enable root access constitutes a problem.replyjampekka 1 hour ago
| root | parent | prev | next [–]
If the risks are so immense, surely we shouldn't be allowed root on our laptops either?replycodethief 48 minutes ago
| root | parent | next [–]
From a security point of view that would be a good idea, or at least making sure you don't need root for everyday tasks. Requiring root to, e.g., install & configure applications is a huge antipattern IMO.replyjampekka 43 minutes ago
| root | parent | next [–]
Android of course requires root for installing and configuring applications. It just grants the root automatically.replybornfreddy 1 hour ago
| root | parent | prev | next [–]
Pssst, quiet, don't give them any ideas... :-/replypaulhart 1 hour ago
| root | parent | prev | next [–]
That's a Chromebook, no?replyjampekka 49 minutes ago
| root | parent | next [–]
Chromebooks have Developer Mode that gives full root.https://www.chromium.org/chromium-os/developer-library/guide...replysfdlkj3jk342a 1 hour ago
| root | parent | prev | next [–]
They actually do include how to do it in their official build guide.
Just change the build target from -user to -userdebug.
All other steps remain the same.
That will give you adb root access.replyyjftsjthsd-h 57 minutes ago
| root | parent | next [–]
> That will give you adb root access.I don't want adb root access? I want to be able to run apps with root access.replyfsflover 56 minutes ago
| root | parent | prev | next [–]
> massive riskAre you saying that the Qubes OS security model is worse than the GrapheneOS one?replyIlikeKitties 0 minutes ago
| root | parent | next [–]
It's a different approach to compartmentalization and the security risk of root in Grapheneos is different to that in QubesOS. But you know this looking at your bio, you just chose to ignore it.junkblocker 30 minutes ago
| prev | next [–]
There did not seem to be an RCS story. Whether the device is RCS capable or not seems to be up to some unfathomable Google logic the tickling of which didn't work for me. Having old RCS chat histories and new RCS chats not work made me go back to stock quick.replythroawayonthe 24 minutes ago
| parent | next [–]
you need the google messaging app for RCSreplygoda90 14 minutes ago
| root | parent | next [–]
Is it because no one else has tried implementing the RCS standard or because Google has some proprietary hold over it?replyNoiseBert69 37 minutes ago
| prev | next [–]
Bought an Google Pixel Tablet only for GOS. Installation worked like a charm and all my applications are still working without problems.Loving it.replyfsflover 44 minutes ago
| prev [–]
GrapheneOS developers keep insisting [0] that their security model is the only reasonably secure approach in the world, despite that Qubes OS proved that wrong.https://news.ycombinator.com/item?id=45101400replyysnp 36 minutes ago
| parent | next [–]
>their security model is the only reasonably secure approach in the worldThey have not said anything like that. In fact there are plenty of things about the current GrapheneOS + Pixel end result that they would change if they had the resources and support to do so. They have repeatedly praised or highlighted improvements in iOS and other less mainstream operating systems.QubesOS is a completely different project with different goals and constraints. GrapheneOS have praised the isolation model of Qubes repeatedly, but have always said it is a strong approximation of many laptops. Older laptop operating systems (Windows/macOS/desktop Linux distros) do not aim to provide similar protections against threats that the newer mobile operating systems have done.replyranger_danger 21 minutes ago
| parent | prev | next [–]
How did Qubes OS prove them wrong? You still have root on qubes, humans still make errors, IMO it's therefore technically still less secure. Of course this assumes your goal is to prevent bad things from happening in general, regardless of how it happens, and not just say "yea the OS is secure but humans can still mess things up by using it wrong".I think protecting people from themselves is a noble goal that is often overlooked, even if many will disagree with me.replyIlikeKitties 4 minutes ago
| parent | prev [–]
What utter nonesense. Just because the GrapheneOS Team doesn't do free work to support devices you like doesn't mean they prevent you from doing it. It's still 100% opensource and you are free to port it yourself to whatever device you please. The entitlement of people that want the grapheneos project to work for them for free is insane. Fucking hire a dev to work on this for a few month yourself if you don't like the device support.reply
Guidelines | FAQ | Lists | API | Security | Legal | Apply to YC | Contact
Search: