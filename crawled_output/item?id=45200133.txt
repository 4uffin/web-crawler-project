Introduction to GrapheneOS | Hacker NewsHacker Newsnew | past | comments | ask | show | jobs | submitloginIntroduction to GrapheneOS (dataswamp.org)92 points by renehsz 7 hours ago
| hide | past | favorite | 83 comments
estimator7292 1 hour ago
| next [–]
I ran Graphene for several months and hated every minute of it. It's incredibly and unjustifiably inflexible and treats the user like they're the primary security threat.Sure it's cool you can turn off google play, but I found myself having to go into the menus and through the six or seven clicks to turn google play back on at least daily.I found the profile feature to be only slightly more convenient than having two physical devices. I could not find any real use for it. I thought I'd set up a work profile to attach to my work gsuite account. Nope, unsupported. I can't attach my work google account at all. Maybe I can just put all my google play dependent apps in a profile? Sure, but to get to them is just about as convenient as rebooting the phone from cold. And notifications are not forwarded to other profiles. If an event happens in another profile, you get a notification that there is a notification. You still have to drop everything to reboot into the other profile to check that you got an emote reaction to your Discord message. Great use of my time.The entire thing seems like theater designed to show everyone that they're doing absolutely everything to be Secure, and user experience is a tertiary concern at most.Graphene is not an OS for normal people to use. It's designed as an OS for nerds who want to nerd about how "secure" and "private" their device is, irrespective of how usable it is.Again, I tried for months to like it. Once I realized the security features were really only one step removed from having two devices, I just gave up. I'd rather be able to use my device the way I want than to be "secure" and only use my phone the way Google wants. Sorry, I meant Graphene.Given the choice between two third party entities dictating to me how I'm allowed to use my own device, I'd rather just use lineage and make my own choices.I don't want my OS to coddle me and lock me into padded playpens, I want it to get the hell out of my way and do exactly what I tell it to, even if that action is not in line with what some unknown third party thinks is in my best interest. It's my device, not google's, and certainly not Graphene's.replyzevon 2 minutes ago
| parent | next [–]
Huh? To me, Graphene just feels like unbloated Android with a few convenient ways of customizing google stuff and that's it. I like that it actually gets out of my way and I don't really understand how it "coddles" you.replyelectric_muse 3 hours ago
| prev | next [–]
I just bought a pixel from best buy to install gos, which was an ordeal.At checkout they looked at me like I was up to no good when I said I didn’t want to give them my name, address, and phone number just to purchase the device. I didn’t set up a plan. They said it was for “restocking” or something.Fortunately they accepted obviously fake info. These front line sales people just don’t care as long as they can say they followed the policy.The user containers are very helpful. I have to have TikTok for work and I put it in a container all by itself with a vpn on kill switch. And for one app that needs google play services, I have it a container with that.The duress passcode is super clever, too. You enter a different device passcode and it just wipes the device.replycodethief 3 hours ago
| parent | next [–]
> The user containers are very helpfulYou mean different user accounts? Those are available on stock Android, too.replysubscribed 2 hours ago
| root | parent | next [–]
On GrapheneOS they're profiles. Pretty much the same as with the stock aosp, but they add very extensive support - like notifications forwarding and a perfect balance between security and convenience, 2FA with shorter pin.replycodethief 1 hour ago
| root | parent | next [–]
> but they add very extensive supportHuh, I didn't realize they had added additional functionality not present on stock Android. Thanks!replyelectric_muse 17 minutes ago
| root | parent | next [–]
It's incredibly useful! I have one profile for the "social" apps I don't trust (TikTok, Reddit, etc.). They can commingle. And there's another profile that contains the apps that rely on Google Play Services (e.g. something relies on google maps). As far as I understand it, it's like a strong firewall between them such that they are pretty close to having multiple different phones.replya0sud0a8s 3 hours ago
| root | parent | prev | next [–]
True, although on GrapheneOS, apps on different profiles can remain active when you switch and notifications can be sent to the primary profile if you choose.replyysnp 3 hours ago
| root | parent | prev | next [–]
I think it depends on the Android distribution. I am not sure it is available on Samsung's One UI.replygertop 2 hours ago
| root | parent | next [–]
Multiple user is available on Samsung. Both multiple profiles as well as work profile.Samsung also has "secure folder" which isolates apps and files and presumably uses multiple users to do the isolation.replyysnp 2 hours ago
| root | parent | next [–]
Apparently multiple user profiles is available on their tablets but not on their smartphones.replydosshell 3 hours ago
| parent | prev | next [–]
> I have to have TikTok for workI'm sorry but what? Your job demands what apps you have installed on your PRIVATE phone!?replyelectric_muse 16 minutes ago
| root | parent | next [–]
Well, nobody's forced it, but my company publishes content on TikTok that drives customers, and I want to be able to see it myself. You'd be surprised how many CISOs and security workers are on TikTok.Edit: "experts" > "workers"replyffsm8 30 minutes ago
| root | parent | prev | next [–]
All jobs I've had since the mid 2010s essentially did the same for me by requiring 2fa in certain contextsreplyTranquilMarmot 2 hours ago
| root | parent | prev | next [–]
I would assume for advertising/business account. There are things you can only do on the TikTok app that you can't do on the web.replyyjftsjthsd-h 5 hours ago
| prev | next [–]
> GOS does not allow you to become root on your phone though, it just gives you more control through permissions and profiles.It really is sad that there isn't any ROM with Graphene's permission and sandboxing features while still leaving the user in control. IIRC it's theoretically possible since they publish the code, but one assumes it would be a non-trivial effort:\replycrapple8430 4 hours ago
| parent | next [–]
You can root GrapheneOS just fine. Moreover you can even re-lock the bootloader after rooting.See: github.com/chenxiaolong/avbrootreplysubscribed 4 hours ago
| parent | prev | next [–]
Okay, but it's very easy for you to build and sign your own builds that provide root access to the user.I dint understand why you insist on this massive risk to be laid on on everyone.GOS publishes pretty detailed documentation. They don't explain step by step how to build an OS with root specifically, instead assuming that the users knowing the immense risks also have the skils they need to achieve it without handholding.replyyjftsjthsd-h 3 hours ago
| root | parent | next [–]
> Okay, but it's very easy for you to build and sign your own builds that provide root access to the user.> GOS publishes pretty detailed documentation. They don't explain step by step how to build an OS with root specifically, instead assuming that the users knowing the immense risks also have the skils they need to achieve it without handholding.It really sounds like you call it very easy, then promptly turn around and say that it's not easy but that's okay because it should be hard. You're also conflating the ability to assess security risks with the ability to build Android from source and modify it in the process, even though these skills are mostly unrelated.> I dint understand why you insist on this massive risk to be laid on on everyone.Largely, I don't agree that it's a "massive risk" in the first place. I don't believe that user-controlled root access is a problem, and I certainly don't believe that a default-off option to enable root access constitutes a problem.replysubscribed 2 hours ago
| root | parent | next [–]
No, it is very easy.You either build a debug image, so you just have it, or you add your own patches adding this capability (in exactly the same way the project modifies stock aosp), and build it.Use your own keys to sign and you're golden.The assumption is you know what you're doing, and then it's very easy. If you don't, then you likely shouldn't.I am not really "conflating" these in a way you suggest: it's not just about building the image but deeper understanding that will bring both.It's not disconnected from the project, but it's inherently within the project. SURE you can consider these two separate skills, but within the context of "getting the root on the GOS build" it's one. If you don't know how to make it happen, you don't have a skill to safely use it.And lastly, it's okay if you don't consider it a massive risk. I do.Now let's consider the risks of that,
- https://cybernews.com/security/rooted-android-ios-devices-su...
- https://www.talsec.app/blog/what-is-rooting-and-how-to-prote...For you it's not a risk, okay, I guess. I mean, if you're a security researcher with a considerable reputation, you can certainly argue with authority, but I don't see the angle.You argue from the position of convenience and capabilities. Is the risk high? The consensus is that it is. I agree, you don't, I'm okay with it.replyyjftsjthsd-h 1 hour ago
| root | parent | next [–]
> You either build a debug image, so you just have it,It is my understanding that that only gives root to adb, not apps, so no.> or you add your own patches adding this capability (in exactly the same way the project modifies stock aosp), and build it.If we're at the point of patching source trees, then no, we've left the realm of "very easy" behind. Installing Magisk is easy. Building Android from source, let alone patching it, is not.> It's not disconnected from the project, but it's inherently within the project. SURE you can consider these two separate skills, but within the context of "getting the root on the GOS build" it's one. If you don't know how to make it happen, you don't have a skill to safely use it.I really disagree. Knowing when to click the allow button or not is a separate skill from building/patching a ROM from source.> Now let's consider the risks of that, - https://cybernews.com/security/rooted-android-ios-devices-su... - https://www.talsec.app/blog/what-is-rooting-and-how-to-prote...I'd love to, but you'll have to mention what they might be. Both of those links treat root as nearly synonymous with compromise but never bother to explain how that compromise would occur, just 1. root 2. ??? 3. malware. That's fear-mongering, not a threat model.> I mean, if you're a security researcher with a considerable reputation, you can certainly argue with authority, but I don't see the angle.Or, we could avoid Appeal to Authority and talk threat models. The only one I've seen yet in this thread is people claiming that malware can fake out permission dialogs and that this is a problem for root permissions but somehow leaves the rest of Android's permission model in a usable state, which is... an interesting claim.> Is the risk high? The consensus is that it is. I agree, you don't, I'm okay with it.Many people making vague claims might technically be a "consensus" but it's not actually meaningful. If you've got an actual threat model, let's hear it, otherwise there's not much point to this.replyjampekka 4 hours ago
| root | parent | prev | next [–]
If the risks are so immense, surely we shouldn't be allowed root on our laptops either?replysubscribed 2 hours ago
| root | parent | next [–]
And there's reason why normal windows / Linux laptops are less secure.Look, if your media player or game can just steal your ssh keys, or slightly modify your changes to your code, or inject a script into your startup sequence, that's not very safe, is it?And that's even without having access to root (imagine if someone had written a malware like Heartbleed or Shellshock, which then could quietly persist, patch your firmware, or actually do anything it wants?)I hope you're at least running your laptop with selinux in enforcing mode :)replyjampekka 24 minutes ago
| root | parent | next [–]
I'm willing to take the very slight chance of getting compromised in exchange for getting things done.replycodethief 3 hours ago
| root | parent | prev | next [–]
From a security point of view that would be a good idea, or at least making sure you don't need root for everyday tasks. Requiring root to, e.g., install & configure applications is a huge antipattern IMO.replyjampekka 3 hours ago
| root | parent | next [–]
Android of course requires root for installing and configuring applications. It just grants the root automatically.replyoneshtein 2 hours ago
| root | parent | next [–]
Developers cannot trust a random phone «owner».replyfsflover 2 hours ago
| root | parent | prev | next [–]
Have a look at https://qubes-os.org to understand why you're mistaken.replycodethief 1 hour ago
| root | parent | next [–]
I know Qubes. I meant "requiring root to, e.g., install & configure applications is a huge antipattern" on standard Linux distributions, where most people just use sudo in their usual shell, so an attacker merely needs to take over a non-root user account (and their .bashrc) to get root.replybornfreddy 4 hours ago
| root | parent | prev | next [–]
Pssst, quiet, don't give them any ideas... :-/replypaulhart 4 hours ago
| root | parent | prev | next [–]
That's a Chromebook, no?replyjampekka 3 hours ago
| root | parent | next [–]
Chromebooks have Developer Mode that gives full root.https://www.chromium.org/chromium-os/developer-library/guide...replysfdlkj3jk342a 4 hours ago
| root | parent | prev | next [–]
They actually do include how to do it in their official build guide.
Just change the build target from -user to -userdebug.
All other steps remain the same.
That will give you adb root access.replyyjftsjthsd-h 4 hours ago
| root | parent | next [–]
> That will give you adb root access.I don't want adb root access? I want to be able to run apps with root access.replyfsflover 4 hours ago
| root | parent | prev | next [–]
> massive riskAre you saying that the Qubes OS security model is worse than the GrapheneOS one?replysubscribed 2 hours ago
| root | parent | next [–]
Non sequitur?GOS is not running a flavour of mainline Linux, but Android.
They're nevertheless planning on moving to virtualisation as well
https://discuss.grapheneos.org/d/24154-grapheneoss-roadmap-r...For now it's as good as it gets.replyIlikeKitties 3 hours ago
| root | parent | prev | next [–]
It's a different approach to compartmentalization and the security risk of root in Grapheneos is different to that in QubesOS. But you know this looking at your bio, you just chose to ignore it.replyfsflover 2 hours ago
| root | parent | next [–]
Can you elaborate on the differences in the compartmentalization? When the existence of root is equivalent to a broken security, it doesn't look secure to me at all. Are you talking about the security from the user?By the way, personal attacks are against the HN Guidelines.replyIlikeKitties 2 hours ago
| root | parent | next [–]
Ah yes thats a real good faith argument you got there.GrapheneOS is designed so you don’t need root to run apps or manage the device. Compartmentalization is on an per app level. And you already know how qubes does compartmentalisation.replyranger_danger 5 hours ago
| parent | prev | next [–]
If you have the UI layer able to grant root access, it has root access itself and is not sandboxed. If the UI layer can grant it, an attacker gaining slight control over it has root access. An accessibility service trivially has root access. A keyboard can probably get root access, and so on. Instead of a tiny little portion of the OS having root access, a massive portion of it does.In the verified boot threat model, an attacker controls persistent state. If you have persistent root access as a possibility then verified boot doesn't work since persistent state is entirely trusted.A userdebug build of AOSP or GrapheneOS has a su binary and an adb root command providing root access via the Android Debug Bridge via physical access using USB. This does still significantly reduce security, particularly since ADB has a network mode that can be enabled. Most of the security model is still intact. This is not what people are referring to when they talk about rooting on Android, they are referring to granting root access to apps via the UI not using it via a shell.replycakealert 4 hours ago
| root | parent | next [–]
> If you have the UI layer able to grant root access, it has root access itself and is not sandboxed.The same is true even of an operating system such as QubesOS. And it's a minimal risk.Not providing optional root access on GOS makes it only useful if you have a constrained application in mind for the phone. I don't have time to compile GOS with root so I just use LineageOS instead.replybbarnett 3 hours ago
| root | parent | next [–]
It's useful for general use just fine.But you could always do both.
Compile it, but preinstall a specific set of apps as root, no su.replyyjftsjthsd-h 5 hours ago
| root | parent | prev | next [–]
EDIT: This is a reply to the 2nd(?) version of your comment before it was silently changed into something different.Yes, I'm sure it is. But I don't consider that a tolerable tradeoff, and I believe we could have a system that has most of the best of both worlds.replyysnp 3 hours ago
| root | parent | prev | next [–]
>This is not what people are referring to when they talk about rooting on AndroidWould this have been easier or more possible if Android had a full capability-based security model?replyyjftsjthsd-h 3 hours ago
| root | parent | next [–]
Arguably Android has a capability-based security model, though it suffers from being ... well, it's not what you'd build if you were doing it from scratch today. Hindsight is 20/20. But I'd tentatively say not really, because the point of root is to get outside the existing capabilities. As an example: For a while, the most common root app I ran was one to limit charging to 80% or whatever to make the battery age more gracefully.[0] The whole reason that needed root is because there wasn't a capability/permission for that; the app couldn't ask the OS to let it control charging, because nobody even thought to expose that API surface.[0] This was later obsoleted by the OS adding that feature natively, which is an interesting angle to consider; directly supporting the things people root for definitely helps, but you're unlikely to ever get everything so it's not a panacea.replyysnp 3 hours ago
| root | parent | next [–]
>This was later obsoleted by the OS adding that feature natively, which is an interesting angle to consider; directly supporting the things people root for definitely helps, but you're unlikely to ever get everything so it's not a panacea.For what it's worth, my understanding is that this has always been the position of GrapheneOS too. Given the resources and enough benefit/cost to allocate, the project would rather integrate or implement usability features at the OS level instead of encouraging people to expose attack surface. Specifically because GrapheneOS is a project meant to be primed to defend some of the most intimate and personal aspects of a person's life.replyyjftsjthsd-h 3 hours ago
| root | parent | next [–]
Yeah, I definitely think it's an excellent goal to erode the cases that need root. It is a powerful escape hatch, and I think it's important that it exist, but it's also a good thing to not need it. The difference is that I don't believe the system will ever cover everything I want to do, so I consider that escape hatch to be really important.replyyjftsjthsd-h 4 hours ago
| root | parent | prev | next [–]
Quoting inline since parent has been rewritten multiple times now...> If you have the UI layer able to grant root access, it has root access itself and is not sandboxed. If the UI layer can grant it, an attacker gaining slight control over it has root access. An accessibility service trivially has root access. A keyboard can probably get root access, and so on. Instead of a tiny little portion of the OS having root access, a massive portion of it does.Android has an established way to handle permission dialogs that require the user to confirm their approval, including use of fingerprint/PIN/password to authenticate. If it's good enough to unlock and decrypt the device, it's good enough to control root access. Besides which, I think> An accessibility service trivially has root access.is hitting https://xkcd.com/1200/ ; an a11y service already has access to everything inside the sandbox (including all your sensitive data), and the system settings that control permissions and sandboxing.> In the verified boot threat model, an attacker controls persistent state. If you have persistent root access as a possibility then verified boot doesn't work since persistent state is entirely trusted.I'm tentatively willing to agree, but I don't see the point? 1. If an attacker controls persistent state, don't they already control all the other permissions, including what security domains exist and what permissions are given to apps. 2. You don't have to persist it; even just one-off root access is quite useful.> A userdebug build of AOSP or GrapheneOS has a su binary and an adb root command providing root access via the Android Debug Bridge via physical access using USB. This does still significantly reduce security, particularly since ADB has a network mode that can be enabled. Most of the security model is still intact. This is not what people are referring to when they talk about rooting on Android, they are referring to granting root access to apps via the UI not using it via a shell.Agreed, that's not what I want.replyranger_danger 4 hours ago
| root | parent | next [–]
> Android has an established way to handle permission dialogs that require the user to confirm their approvalWith the advent of choicejacking I don't think I want to trust permission dialogs anymore.> including use of fingerprint/PIN/password to authenticateIMO if you have the UI layer able to grant root access at all, even with requiring re-authentication, it still already has root access itself and is therefore not sandboxed.replyyjftsjthsd-h 4 hours ago
| root | parent | next [–]
> With the advent of choicejacking I don't think I want to trust permission dialogs anymore.So you're using a version of Android patched to remove all permissions? After all, in your threat model all apps can get permission to use the microphone and camera, make phone calls, access fine-grained location information, read and write files at will, etc. Frankly, I'm not sure what they'd get out of root at this point.> IMO if you have the UI layer able to grant root access at all, even with requiring re-authentication, it still already has root access itself and is therefore not sandboxed.Likewise, surely this applies to any permission system, and every other permission. The system UI controls every other permission in the system; if we assume it compromised, then everything else is already lost.replycodethief 3 hours ago
| root | parent | next [–]
> Frankly, I'm not sure what they'd get out of root at this point.A permission that allows them to hide that they have access to everything, including other apps' data?replyyjftsjthsd-h 3 hours ago
| root | parent | next [–]
Possibly. Yes, hiding from auditing would be a possible advantage, but I think an app with accessibility permissions could already draw over the settings app to hide the real list of permissions from your view without root. Off the top of my head I think there's a whole mess of permissions needed to allow that, but we're discussing a threat model where permission dialogs can be effectively bypassed so that's no obstacle.replycharcircuit 3 hours ago
| parent | prev | next [–]
Giving the user control does not mean giving the user root. Giving root breaks Android security model. Whatever capability you want should be implemented as a proper feature to avoid breaking the security of the device.Equating control to root is an outdated way of thinking that comes from a time before the principle of least privilege existed. The way UNIX did things should not be put on a pedestal.replytreyd 2 hours ago
| root | parent | next [–]
That would be nice, but trying to get those kinds of functionality upstreamed into GOS so they can be exposed tovapps in a structured way with the usual permissions model is a high effort.There needs to be some escape hatch that you can use, even if your grandma doesn't have access to it.replycharcircuit 2 hours ago
| root | parent | next [–]
There doesn't need to be an easy escape hatch. The escape hatch is to wipe and flash a fork.replyoneshtein 2 hours ago
| root | parent | prev | next [–]
> Giving root breaks Android security model.It's true only if user is the threat for the user, e.g. a user with low IQ but high curiosity, but such user usually cannot install GrapheneOS.replycharcircuit 2 hours ago
| root | parent | next [–]
This kind of mentality is why malware became such a big issue on Windows. It turned out ignoring security and just relying on the user to not be stupid doesn't work. That mistake shouldn't be made again and there is no reason to artificially restrict the audience of an OS to people who don't have "low IQ."replytietjens 3 hours ago
| prev | next [–]
Sincere question: what is the point of using this OS for privacy and then using Google services? The intro runs though how it’s very easy to do this. Maybe I’m missing something.replycool_cherry 2 hours ago
| parent | next [–]
It's actually really great!Google Play Services is a dependency for some apps, and GrapheneOS allows for people to take steps to protect their privacy while still being able to use those apps.First, with GrapheneOS google play services run in a sandbox like any other app. (play services have more privileged access in vanilla android)It also works well with a multi-user setup. The default account in Android is the "owner account" and in GrapheneOS (and AOSP) you can use the owner account to create multiple distinct user accounts on the device. Then, you can only install google play services in one user account. Google play services won't start if you're not logged into that user account.Google play services won't have visibility into your other user accounts and what you're doing there. And even in your account with play services installed, there's a bit more privacy because of the sandboxing (although I believe google play will know all of the apps installed in that user account)There's a full explanation here: https://grapheneos.org/usage#sandboxed-google-playEdit: I am a web security researcher and longtime user of GrapheneOS and have always been impressed by the features, frequent security updates, and focus on usability, security, and privacy. They've upstreamed numerous security improvements to Android and other open source projects (so if you're running Android, they've probably made your phone more secure!).https://grapheneos.org/faq#upstreamI encourage folks to join me in making a regular small donation to the project if you have some cash to spare. They're doing good work.https://grapheneos.org/donatereplyysnp 2 hours ago
| parent | prev | next [–]
GrapheneOS primarily exists to give you tools to exert more control over what apps have access to and to better protect your data. What you do with those tools is entirely your own concern. Where those apps come from is not GrapheneOS's concern.I don't think most people use Google services out of choice anyway, but more because sometimes that's the only way to get functionality you may need.replykrior 3 hours ago
| parent | prev | next [–]
Afaik, Google services are run in a sandbox on Graphene OS.replytietjens 2 hours ago
| root | parent | next [–]
Hm ok but location data etc still goes to them? What about the device fingerprint?I’m just wondering what the selling point for using Graphene with Google is. Very Graphene curious.replythothless 2 hours ago
| root | parent | next [–]
as a new graphene adopter, still figuring stuff out myself, but it's been surprisingly easy and satisfying to do a hard cut-over to graphene.cool_cherry explained exactly how I've been using it, with my main 'owner' account not having play services installed at all, only instead installed on another user, which only takes a few seconds to switch to.you can easily install owner apps onto other user profiles.
or grant/forbid the other user profiles to install apps themselves.users are not tied to google accounts, only your google play installations.I was able to install google play apps on 'owner' user and then uninstalled google play services and play store. if they don't require play services to function, they work fine, otherwise they just might not function or may function/look surprisingly differently when they don't have their network connections.location, network, other permission have defaults and can set them on per-app basis like on normal android.a unique device MAC address is generated for each wifi connection.replyarminiusreturns 2 hours ago
| parent | prev | next [–]
Security, including privacy, is about layers of hardening. In this case, minimization of leakage and other privacy concerns for some can still be worth the tradeoffs. For example, some apps literally refuse to work on a completely de-googled phone. (I ran one for many years with no google services). Also, the general control the user gets offers a lot more ability to harden than most android. I bricked my phone and am currently borrowing one and using stock android and there are things like facebook that are literally uninstallable... At least on lineage/graphene the user can actually control the system.replynpteljes 34 minutes ago
| prev | next [–]
I use Graphene for years now and it's the most out of my way OS I have used on my phones so far. It Just Works™, no bundleware, all the freedom I need.replyjunkblocker 3 hours ago
| prev | next [–]
There did not seem to be an RCS story. Whether the device is RCS capable or not seems to be up to some unfathomable Google logic the tickling of which didn't work for me. Having old RCS chat histories and new RCS chats not work made me go back to stock quick.replythroawayonthe 3 hours ago
| parent | next [–]
you need the google messaging app for RCSreplygoda90 3 hours ago
| root | parent | next [–]
Is it because no one else has tried implementing the RCS standard or because Google has some proprietary hold over it?replycpa 2 hours ago
| root | parent | next [–]
Apple has RCS, compatible with Android, at least in the EU. You don't get the blue bubble though.replyKlonoar 1 hour ago
| root | parent | next [–]
I think they’re asking about on Android. The point is whether there’s an alternative RCS client to run on GOS.replyThePowerOfFuet 2 hours ago
| parent | prev | next [–]
RCS is an abomination.replyewuhic 2 hours ago
| prev | next [–]
Do bank apps work with GrapheneOS?replynpteljes 39 minutes ago
| parent | next [–]
Apps that need SafetyNet to be in a particular state won't work. I never experienced the downside, even with my smaller bank's app, it works seamlessly.Although, keep in mind, this is subject to change. All they need to do is just introduce the requirement in an app update, and then you're screwed.replyewuhic 11 minutes ago
| root | parent | next [–]
What is SafetyNet?replyysnp 1 hour ago
| parent | prev | next [–]
In my country most of them do. It depends on the bank and their application. https://privsec.dev/posts/android/banking-applications-compa... offers a possibility to check which apps may work fine.replyNoiseBert69 3 hours ago
| prev | next [–]
Bought an Google Pixel Tablet only for GOS. Installation worked like a charm and all my applications are still working without problems.Loving it.replyTranquilMarmot 2 hours ago
| parent | next [–]
Installing it on a tablet is a good idea. I hesitate to install it on my phone because I'm concerned about a few things I rely on not working (RCS, tap to pay, nearby devices to unlock rental cars)replyysnp 1 hour ago
| root | parent | next [–]
Contactless payments via phone would only be possible if you had a banking app that provided the feature independently. Google Wallet/Google Pay does not work on OSes not certified by Google.replyNoiseBert69 1 hour ago
| root | parent | next [–]
Paypal tap-to-pay works according to reports.replyfsflover 3 hours ago
| prev [–]
GrapheneOS developers keep insisting [0] that their security model is the only reasonably secure approach in the world, despite that Qubes OS proved that wrong.https://news.ycombinator.com/item?id=45101400replyysnp 3 hours ago
| parent | next [–]
>their security model is the only reasonably secure approach in the worldThey have not said anything like that. In fact there are plenty of things about the current GrapheneOS + Pixel end result that they would change if they had the resources and support to do so. They have repeatedly praised or highlighted improvements in iOS and other less mainstream operating systems.QubesOS is a completely different project with different goals and constraints. GrapheneOS have praised the isolation model of Qubes repeatedly, but have always said it is a strong approximation of many laptops. Older laptop operating systems (Windows/macOS/desktop Linux distros) do not aim to provide similar protections against threats that the newer mobile operating systems have done.replyranger_danger 3 hours ago
| parent | prev | next [–]
How did Qubes OS prove them wrong? You still have root on qubes, humans still make errors, IMO it's therefore technically still less secure. Of course this assumes your goal is to prevent bad things from happening in general, regardless of how it happens, and not just say "yea the OS is secure but humans can still mess things up by using it wrong".I think protecting people from themselves is a noble goal that is often overlooked, even if many will disagree with me.replyIlikeKitties 3 hours ago
| parent | prev [–]
What utter nonesense. Just because the GrapheneOS Team doesn't do free work to support devices you like doesn't mean they prevent you from doing it. It's still 100% opensource and you are free to port it yourself to whatever device you please. The entitlement of people that want the grapheneos project to work for them for free is insane. Fucking hire a dev to work on this for a few month yourself if you don't like the device support.reply
Guidelines | FAQ | Lists | API | Security | Legal | Apply to YC | Contact
Search: