Apache Kafka as a Service Optimized for Developers | Heroku
Search overlay panel for performing site-wide searches
Search For:
Close
Salesforce (Heroku) Recognized as a Leader. Learn More!
Search
Open Search Popup
Account menu
DashboardDatabasesDataclipsElementsDocumentationSupport
Login
Sign Up
Products
Products
Discover Heroku’s AI PaaS (Platform as a Service), designed for effortless app deployment and scaling. Explore our cloud application platform features, reliable managed data services, and a robust ecosystem to power your modern applications.
Heroku PlatformDeploy, manage, and scale apps on Heroku, an AI PaaS based on a managed container system.Heroku AIBuild intelligent applications with managed inference and agents, MCP, and more.Heroku Data ServicesSimplify your data management with Heroku’s fully managed cloud databases and data services.Heroku EnterpriseThe Heroku experience developers love, with the enterprise features large companies need.Heroku SuccessExplore Heroku’s support options from Standard to Signature, with resources for developers and partners.Heroku Elements MarketplaceAccelerate your app development with our ecosystem of add-ons, integrations, and buildpacks.
Custom Agentforce Actions with Heroku AppLink
Join us for a deep dive into custom Agentforce actions with Heroku AppLink, a new integration solution that bridges the gap between powerful custom Heroku apps and your Salesforce ecosystem.
Developers
Developers
With Heroku's flexible app platform, you can focus on building apps, not infrastructure. Benefit from a meticulously designed developer experience, a polyglot platform supporting your favorite languages, and innovative AI PaaS features to enhance your development workflow.
Dev CenterDive into our comprehensive documentation and guides. Learn about building, deploying, managing, and scaling your apps.Languages
Python.NETJavaNode.jsGoPHPRubyScalaClojure
Custom Agentforce Actions with Heroku AppLink
Join us for a deep dive into custom Agentforce actions with Heroku AppLink, a new integration solution that bridges the gap between powerful custom Heroku apps and your Salesforce ecosystem.
Customers
Customers
Discover how companies in diverse industries like Healthcare, Entertainment, Automotive, Retail, FinTech, and more achieve growth and foster innovation with our powerful cloud application platform. Learn how they leverage Heroku’s AI PaaS for cutting-edge solutions.
Customer StoriesHeroku in action: See how organizations of all sizes and industries are succeeding with Heroku.Community StoriesExplore real-world experiences and perspectives on Heroku from developers and communities online.
Customer Story: Watch Duty
Discover how Watch Duty used Heroku to provide real-time wildfire alerts, achieving 100% uptime and scaling effortlessly during crises.
PricingResources
ResourcesLearn more about Heroku's AI PaaS and stay up to date on all Heroku announcements. Gain insights from our team through insightful content and discover how to leverage our platform effectively.
BlogStay up-to-date on Heroku news, important product releases, and valuable insights from the Heroku team.What is Heroku?Learn how Heroku’s AI PaaS simplifies app development, deployment, and scaling.EventsFind Heroku at an event near you! Explore our calendar of tech conferences and meetups.PartnersFor Consultants, ISVs, and technical solution providers looking to grow their business with pro-code solutions.Compliance CenterHeroku is a platform you can trust. Explore our compliance certifications and security measures.Help CenterFind answers to your questions in the Help Center. Browse FAQs, articles, and get support.
Latest News from the Heroku Blog
Securing Salesforce Integrations with Heroku AppLink
Sept 10 - by David Baliles
Improve your security model with Heroku AppLink, a managed bridge between Salesforce and Heroku that improves risk and governance.
Apache Kafka as a Service on HerokuStreaming data service optimized for developers.Get Started Now
What is Kafka?Apache Kafka is a distributed commit log for fast, fault-tolerant communication between producers and consumers using message-based topics. Kafka provides the messaging backbone for building a new generation of distributed applications capable of handling billions of events and millions of transactions. Heroku’s Kafka as a service streamlines the deployment and management of Kafka clusters, allowing developers to focus on building applications without the overhead of infrastructure management.Get started with Apache Kafka on Heroku
Take control of your eventsEvents are everywhere — user activity streams, log events, telemetry from embedded devices and mobile phones, and more. Kafka flips the script from push to pull, letting you take control of high-volume event streams in your applications to transform the customer experience. With Heroku’s managed Kafka, you can accept inbound events at any scale with ease and route them to key-based partitions, providing a clear path to real-time stream processing for user activity tracking, ad tracking, IoT, mobile sync and messaging systems.
Build modern application architecturesApplication architectures like microservices require new approaches to coordination, scaling and orchestration. Kafka’s pull-based communication model reduces backpressure on key services under load, letting you add and scale new services independently. Kafka enables moving from actor to channel centric app dev models, simplifying services discovery and reducing brittle RPC style and many-to-many coordination between services.
New ways to process data and timeKafka lets you rethink the relationship between data, time and operations in your application. Kafka takes transactional data in tables and reduces it to a series of events, each representing a keyed record and operation at a point in time. This lets you create a record of all change events in your application for data recovery, replay, simulation and auditing. These same primitives let you build powerful data processing pipelines for analytics and transformation use cases, with consumers reading data from a set of topics, applying functions, and writing the output to a new set of topics.
Why Apache Kafka on Heroku?
Manage event streams of all sizesWhether you’re first exploring event-driven architecture or looking for an enterprise-grade Kafka solution, Heroku has you covered. Get started with a plan to develop and test; change to a larger plan – with a simple command on the CLI – as your production needs expand.
World-class operationsNow you can consume Kafka as a service with Heroku’s world-class orchestration and thoughtfully tuned configurations that keep Kafka fast and robust. We distribute Kafka resources across network zones for fault tolerance, and ensure your Kafka cluster is always available and addressable.
Elegant developer experienceEasy-to-use CLI and web tooling make Kafka as a service on Heroku simple to provision, configure and operate. Add topics, create partitions, manage log compaction, and monitor key metrics from the comfort of the CLI or Heroku Dashboard.
Seamless integration with appsRun producers and consumers as Heroku apps for simple vertical and horizontal scalability. Config vars make it easy to securely connect to your Kafka cluster, so you can focus on your core logic.
Securely manage protected, regulated data streamsSafely handle sensitive streams of PHI and PII data to build a new class of real-time apps with strict security and seamless HIPAA compliance, perfect for regulated industries such as healthcare and life sciences.
Access event streams in Heroku and AmazonSeamlessly and securely connect Apache Kafka on Heroku to resources in one or more Amazon VPCs via PrivateLink.
Bring your own key (BYOK)Deploy a new managed Apache Kafka service with your own key created and managed in your private AWS KMS account. You can block access from anyone, at any time, by revoking the key, giving you full control and custody of your sensitive data.
Streaming Data ConnectorsWith Heroku’s effortless Change Data Capture (CDC) process, quickly configure a connector to monitor one or more Postgres tables for writes, updates, and deletes, and then write each change to an Apache Kafka on Heroku topic.
How it worksKafka as a service provides a powerful set of primitives for connecting your distributed application: messages, topics, partitions, producers, consumers, and log compaction.
MessagesKafka is a message-passing system; Messages are events and can have keys.BrokersA Kafka cluster is made up of brokers that run Kafka processes.TopicsTopics are streams of messages of a particular category.PartitionsPartitions are append-only ordered logs of a topic’s messages. Messages have offsets denoting position in the partition. Kafka replicates partitions across the cluster for fault tolerance and message durability.ProducersProducers are client processes that send messages to a broker on a topic and partition. Producers can use a partitioning function on keys to control message distribution.ConsumersConsumers read messages from topics’ partitions on brokers, tracking the last offset read to coordinate and recover from failures. Consumers can be deployed in groups for scalability.Log compactionLog compaction keeps the most recent value for every key so clients can restore state.
“Apache Kafka on Heroku gives us expert fine-tuning of the platform, along with day-to-day management and metrics, that we simply couldn’t achieve by ourselves.”
Yuri Oliveira
Full Stack Engineer, GNAR
GNAR’s story
Apache Kafka on HerokuCreate a Heroku appAdd and provision a Kafka planCreate and manage topicsDeploy your code to your appSee your event flows
Build data-intensive apps on managed Kafka clusters
Elastic queuingKafka as a service on Heroku acts as the edge of your system, durably accepting high volumes of inbound events — be it user click interactions, log events, mobile telemetry, ad tracking, or other events. This enables you to create new types of architectures for incremental processing of immutable event streams. You can add and remove downstream services seamlessly without impacting the ability to accept high throughput inbound events. Kafka’s durability ensures events are available when services reconnect after failures so no events are lost.
Data pipelines and analyticsKafka is an ideal transport for building data pipelines for transforming stream data and computing aggregate metrics. Pipelines can help you build advanced data-centric applications and enable analytics teams to make better decisions. Kafka’s distributed architecture and immutable event streams make it trivial to build pipelines for incremental, parallel processing of fast-moving data. You can integrate all the disparate sources and sinks of data in your organization.
Microservices coordinationKafka enables you to model your application as a collection of microservices that process events and exchange state over channel-like topics. Kafka becomes the backplane for service communication, allowing microservices to become loosely coupled. Bootstrapping microservices becomes order-independent, since all communications happens over topics. Service discovery is simply a matter of connecting to new topics. Consuming and producing services, as well as Kafka brokers, can be scaled independently so your architecture is fully elastic. Kafka distributes topics and replicates messages across multiple servers for event durability, so if a broker fails for any reason, your event data will be safe. If a service fails it can reconnect and start processing from the last known offset.
See it in actionSee what Kafka on Heroku can do. Check out our recent demo.View Kafka Demo
DocumentationApache Kafka on HerokuHeroku’s Streaming Data ConnectorsModeling Event Streams for your ProductAdd-onApache Kafka on HerokuStreaming data service optimized for developers.
Tutorials and other resourcesKafka Stream Processing DemoIntroducing the Streaming Data Connectors Beta: Capture Heroku Postgres Changes in Apache Kafka on HerokuHeroku Postgres Streaming Data Connectors DemoHeroku Metrics: There and Back AgainPowering the Heroku Platform API: A Distributed Systems Approach Using Streams and Apache Kafka
Tech session Building Event-Driven Architectures with Kafka on HerokuApache Kafka as a service can be used to stream billions of events per day — but do you know where to use it in your app architecture? Find out at our technical session. See a live demo and hear answers to questions from Heroku product experts.Podcast Apache Kafka at Heroku, with Thomas CrayfordListen to our podcast with Software Engineering Daily from October 25th, 2016.Apache Kafka is a durable, distributed message broker that’s a great choice for managing large volumes of inbound events, building data pipelines, and acting as the communication bus for microservices. In this Software Engineering Daily podcast, Heroku engineer, Tom Crayford, talks about building the Apache Kafka on Heroku service, challenges we faced, and why we focused on Kafka in the first place.
Ready to Get Started?Stay focused on building great data-driven applications and let Heroku tackle the rest.Sign Up Now
Products
Heroku Platform
Heroku AI
Heroku Managed Inference and Agents
pgvector for Heroku Postgres
MCP on Heroku
Heroku Data Services
Heroku Postgres
Heroku Key-Value Store
Apache Kafka on Heroku
Heroku Enterprise
Heroku Private Spaces
Heroku Connect
Heroku Shield
Heroku Success
Heroku Teams
Elements Marketplace
Languages
Python
.NET
Java
Node.js
Go
PHP
Ruby
Scala
Clojure
Resources
Dev Center
Training & Education
Get Started
Pricing
Blog
Customers
Partners
Compliance Center
Solutions
Podcasts
About Us
What is Heroku?
Heroku & Salesforce
Careers
Help Center
Status
Contact
Rss
X-twitter-square
Github
Linkedin
日本語
Legal
Terms of Service
Privacy Information
Responsible Disclosure
Trust
Contact
Cookie Preferences
Your Privacy Choices
Sitemap
Legal
Terms of Service
Privacy Information
Responsible Disclosure
Trust
Contact
Cookie Preferences
Your Privacy Choices
Sitemap
© Copyright 2025 Salesforce, Inc. All rights reserved. Various trademarks held by their respective owners. Salesforce Tower, 415 Mission Street, 3rd Floor, San Francisco, CA 94105, United States