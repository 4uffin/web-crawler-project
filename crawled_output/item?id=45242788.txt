Vibe coding has turned senior devs into 'AI babysitters' | Hacker NewsHacker Newsnew | past | comments | ask | show | jobs | submitloginVibe coding has turned senior devs into 'AI babysitters' (techcrunch.com)61 points by CharlesW 2 hours ago
| hide | past | favorite | 46 comments
cedilla 1 hour ago
| next [–]
Funny how the article starts with someone using AI — to develop more AI stuff.This reminds me of web3, where almost all projects were just web3 infrastructure or services, to the point that the purpose of most start-ups was completely inscrutable to outsiders.I'm having lots more hope for AI though.replycs702 26 minutes ago
| prev | next [–]
Here's the approach I've seen so far at a few startups:1. Replace junior developers with AI, reducing costs today.2. Wish and hope that senior developers never retire in the future.3. ?replykermatt 20 minutes ago
| parent | next [–]
3. Hire more developers to decode / devibe code, paying double in the end.replymicromacrofoot 14 minutes ago
| parent | prev | next [–]
you'll be retired by 3, good luck kidsreplymatthewfcarlson 15 minutes ago
| prev | next [–]
As someone who spends his non work hours convincing a half baked quasi person to not do dumb things (a two year old), I have zero interest in convincing a half baked quasi person to not do dumb things during work hours (most coding agents).I’ve had good results with Claude, it just takes too long. I also don’t think I can context switch fast enough to do something else while it’s churning away.replysiliconc0w 1 hour ago
| prev | next [–]
Vibe Coding is so early 2025, I only check in context, prompt instructions, and seed values to deterministically generate the machine-code.replyfzzzy 55 minutes ago
| parent | next [–]
LLMs
aren’t deterministic even with a seed.replyjsheard 53 minutes ago
| root | parent | next [–]
Doesn't that depend on the implementation? There's a trade-off between performance and determinism for sure, but if determinism is what you want then it should be possible.replyjb1991 49 minutes ago
| root | parent | next [–]
If you fix random seeds, disable dropout, and configure deterministic kernels, you can get reproducible outputs locally. But you still have to control for GPU non-determinism, parallelism, and even library version differences. Some frameworks (like PyTorch) have flags (torch.use_deterministic_algorithms(True)) to enforce this.replygeor9e 51 minutes ago
| root | parent | prev | next [–]
what if you set top_p=1, temperature=0, and always run it on the same local hardwarereplydaemonologist 46 minutes ago
| root | parent | next [–]
Maybe if you run it on CPU.
(Maybe on GPU if all batching is disabled, but I wouldn't bet on it.)replyjb1991 52 minutes ago
| root | parent | prev | next [–]
This. I’m still amazed how many people don’t understand how this technology actually works. Even those you would think would have a vested interest in understanding it.replydwheeler 19 minutes ago
| prev | next [–]
Using AI assistants != Vibe Coding.AI can be a helpful assistant but they are nowhere near ready for letting loose when the results matter.replystavros 12 minutes ago
| parent | next [–]
Exactly this, if you're babysitting the AI, you are, by definition, _not_ vibe coding. Vibe coding means not reading the resulting code, and accepting that things will break down completely in four or five iterations.replyDeepYogurt 11 minutes ago
| parent | prev | next [–]
Brother most of them ain't even assisting. Management just forces it.replysl8s 1 hour ago
| prev | next [–]
If you add an AGENTS.md, the AI agent will work more efficiently, and there will be far fewer problems like the ones you’re facing. You can include sections such as Security, coding style guidelines, writing unit tests, etc.replywewewedxfgdf 3 minutes ago
| prev | next [–]
And yet it is still so hard to get something sufficiently complete to launch, even with AI.AI just makes ambition and competition go up.replyjitl 1 hour ago
| prev | next [–]
The worst is when I have to baby-sit someone else’s AI. It’s so frustrating to get tagged to review a PR, open it up, and find 400 lines of obviously incorrect slop. Some try to excuse by marking the PR [vibe] but like what the hell, at least review your own goddamn ai code before asking me to look at it. Usually I want to insta reject just for the disrespect for my time.replydawnerd 1 hour ago
| parent | next [–]
I insta reject. It’s ridiculous how bad it’s made some devs. Are they even testing their work before tossing over the wall?replyscrame 3 minutes ago
| root | parent | next [–]
were they before?replywhynotminot 1 hour ago
| parent | prev | next [–]
Hold up, people are starting to mark PRs with [vibe] as in “I don’t stand behind this, good luck.” ??I do not care if engineers on my team are using AI. In fact, I think they should be. This is the new world and we need to get used to it.But it’s still your work, your responsibility. You still have to own it. No cop outs.replylawn 1 hour ago
| parent | prev | next [–]
We need to normalize to reject crap PRs. If we don't then things will only continue.replyvirgil_disgr4ce 32 minutes ago
| parent | prev | next [–]
lol if I saw a teammember create a PR with "[vibe]" in the title I would:
1) Gape in disbelief
2) Shout obscenities as loud as I can
3) Take a deep breath
4) reject the PR and seriously consider firing them.Yeah "consider firing" is a bit of an extreme kneejerk reaction, but I just feel like we HAVE to create consequences for this nonsense.replyCuriouslyC 1 hour ago
| parent | prev | next [–]
Have your own agent do first pass code reviews, they catch that stuff every time.replyhamdingers 4 minutes ago
| root | parent | next [–]
> they catch that stuff every timeThis is why AI code review continues to be mostly useless in my experience. If you instruct an LLM to make PR comments it will come up with some, every time, even when none are warranted.replygoldenCeasar 1 hour ago
| root | parent | prev | next [–]
And then the PR owner's agent can fix it and then after some number of iterations you get a PR for a new and mysterious system.replytheshrike79 53 minutes ago
| root | parent | next [–]
AI PR tarpit, anyone? :)replyhaffi112 1 hour ago
| prev | next [–]
Why do the news need to make everything sound sensational. Let's move on.replybgwalter 1 hour ago
| prev | next [–]
An advertisement, where the protagonists weigh the pros and cons and then come down on the side of "paying the innovation tax".Fastly profits from"AI" just like Cloudflare (or should we say "Claudeflare").This selection of developers does seem representative at all. The new strategy is to acknowledge "AI" weaknesses
but still adamantly claim that it is inevitable.replyChrisArchitect 20 minutes ago
| prev | next [–]
Related:The Software Engineers Paid to Fix Vibe Coded Messeshttps://news.ycombinator.com/item?id=45235458replyjohnjungles 1 hour ago
| prev | next [–]
PR fatigue is a real thingreplyisaacremuant 1 hour ago
| prev | next [–]
No it hasn't. Next.replybadgersnake 48 minutes ago
| parent | next [–]
Correct. This article is stupid, nobody does that.replygxs 11 minutes ago
| prev | next [–]
AI commentary has been super interestingKind of wild watching engineers, technologists, etc clutch their pearlsAI makes mistakes - so do people - I’ve been paid many a time to go clean up the non-AI generated code humans left behind. I’ve spent countless hours troubleshooting dumb bugs generated by humansAI brings its own set of problems but I think some people just don’t want to hear what a net benefit it isPost after post lamenting that no machine will ever replace the human touch is so old - people have been saying that about new technology since the beginning of timeI say embrace it - great to talk about its problems objectively and how to avoid common issues, but it’s tiresome to hear all the reasons why it’s crap all the timeI would instead love articles (you do see them here sometimes) that go over how people coded complex solutions to problems using AI and the challenges they faced along the wayKnowing where the weak points are or where it may be prone to errorIf you don’t embrace it, pretty soon kids coming out of college that grew up with it that contrary to popular DO understand fundamentals are going to be running circles around the people who haven’t yet figured out how to get value out of it - while you’re out there saying it’s crap and only idiots use it, these kids are going to be moving mountains - I can’t wait to see the cool stuff people build - I don’t see the future as bleakreplyrighthand 1 hour ago
| prev | next [–]
Everyone suggesting maintaining an agent.md file haven’t met the majority of their coworkers who refuse to document anything or read documentation. Perhaps train a model that can generate these agent files for them?replycodazoda 54 minutes ago
| parent | next [–]
Don’t most of these tools create them for you? Just run “/init” and the AI makes the initial agents.md file.Dunno how helpful that is, but they shouldn’t have to write it from scratch.replytheshrike79 54 minutes ago
| parent | prev | next [–]
IMO the best possible outcome of this AI hype is better documentation.It's proven that (agentic) LLMs work better and more efficiently when they have the proper context for the project (AGENT(S).md), the documentation is accessible and up to date (docs/ directory with proper up to date markdown) and the tooling is smooth (git hooks that prevent secrets from being pushed, forced style checking and linting)....surprise! All of this makes things easier for actual humans too!replyrighthand 9 minutes ago
| root | parent | next [–]
I think we’ll just get more documentation not better documentation. There never was a problem generating documentation from code. It’s the business context and use case documentation that’s hard to generate.replyeagerpace 56 minutes ago
| parent | prev | next [–]
I love maintaining my agent file. Yeah, it doesn’t always listen to the instructions, but neither does anyone else.replyhopelite 2 minutes ago
| root | parent | next [–]
You are touching on a critical point that I have been amused by at times in these types of conversations; people are hating on AI for doing all the things that people have done and still do.Poor planning, check. No/inadequate documentation, check. Sloppy and janky code, check. Poor practices and methods, check. Poor and miscommunication, check. Poor technical choices, check. What am I missing?Maybe this is just a matter of some of the top tier 100x devs and teams clutching pearls in disgust at having to look at what goes on below Mt Olympus, but this is also not any different to how code quality cratered and is still really poor due to all the outsourcing and H-1B (sorry, all you H-1B hopefuls) insourcing of quantity over quality.I say that without any judgement, but reality simply is that this issue has long been a quantity over quality argument even before AI, and mostly for non-dev reasons as the recent de-qualification of R&D funding revealed and had a marked impact on dev jobs because the C-suite could don't use R&D funding for financial shenanigans.If people want to hate AI, go ahead. People hated and hate on the H-1B abuses and they hate on AI now. I would hope that we can just move beyond griping and mean-girling AI, and get to a point where proper practices and methods are developed to maybe make the outcomes and outputs better.Because again, AI is not going anywhere less than even H-1B and I am sure the C-suite will find some new way to abuse and play financial shenanigans, but it's simply not going away and we need to learn to live with it since it will seemingly only get "better" and faster as it changes at breakneck speeds.replytennisflyi 45 minutes ago
| prev | next [–]
Not really surprisingreplyFpUser 21 minutes ago
| prev | next [–]
Where does this vibe term come from. There is no fucking vibe here. Just ask question to AI service and then check the results. Saves ton of time but one must be vigilant and be able spot bullshit. Often the solution is correct but code is very inefficient. Luckily in many cases AI can correct based on subsequent critique / input.replychris_pie 12 minutes ago
| parent | next [–]
The meaning has changed very quickly for some reason, but I think the original meaning was that you evaluate the result in a superficial manner by checking if the program seems to work fine. So "vibe" here is as opposed to any methodical or formal approach. No code review etc.replyx3n0ph3n3 10 minutes ago
| parent | prev | next [–]
It comes from people not checking the results thoroughly and taking a YOLO approach to it.replyjph 1 hour ago
| prev | next [–]
One improvement is to start using an AGENTS file. There are many. Here's the repo that I personally use thanks to Pontus Abrahamsson and using TypeScript:https://github.com/pontusab/directoriesIf you prefer AGENTS.md files using markdown, I've extracted them into my own repo:https://github.com/SixArm/ai-agents-tipsreplylordnacho 1 hour ago
| prev [–]
I have very few issues with Claude. If I just tell it what the goal is, it will make some sensible suggestions, and I can tell it to start coding towards it. It rarely messes up, and when it does I catch it in the act.You don't necessarily want to completely tune out while you're using the AI. You want to know what it's up to, but you don't need to be at your highest level of attention to do it. This is what makes it satisfying for me, because often it eats up several minutes to hunt down trivial bugs. Normally when you have some small thing like that, you have to really concentrate to find it, and it's frustrating.When the AI is on a multi-file edit that you understand, that's when you can tune out a bit. You know that it is implementing some edit across several instances of the same interface, so you can be confident that in a few minutes everything will build and you will get a notification.It's as if I can suddenly make all the architecture level edits without paying the cost in time that I had previously.reply
Guidelines | FAQ | Lists | API | Security | Legal | Apply to YC | Contact
Search: