Addendum to GPT-5 system card: GPT-5-Codex | Hacker NewsHacker Newsnew | past | comments | ask | show | jobs | submitloginAddendum to GPT-5 system card: GPT-5-Codex (openai.com)69 points by wertyk 1 hour ago
| hide | past | favorite | 32 comments
darkteflon 0 minutes ago
| next [–]
Does Codex have token-hiding (cf Anthropic’s “subagents”)?I was tempted to give Codex a try but a colleague was stung by their pricing. Apparently if you go over your Pro plan allocation, they just quiet and automatically start billing you per-token?replybayesianbot 51 minutes ago
| prev | next [–]
I've been extremely impressed (and actually had quite a good time) with GPT-5 and Codex so far. It seems to handle long context well, does a great job researching the code, never leaves things half-done (with long tasks it may leave some steps for later, but it never does 50% of a step and then just randomly mock a function like Gemini used to), and gives me good suggestions if I'm trying to do something I shouldn't. And the Codex CLI also seems to be getting constant, meaningful updates.replymmaunder 28 minutes ago
| parent | next [–]
Agreed. We're hardcore Claude Code users and my CC usage trended down to zero pretty quickly after I started using Codex. The new model updates today are great. Very well done OpenAI team!! CC was an existential threat. You responded and absolutely killed it. Your move Anthropic.replyJcampuzano2 26 minutes ago
| root | parent | next [–]
To be fair, Anthropic kinda did this to themselves. I consider it as a pretty massive throw on their end in terms of the fairly tight grasp they had on developer sentiment.Everyone else slowly caught up and/or surpassed them while they simultaneously had quality control issues and service degradation plaguing their system - ALL while having the most expensive models comparatively in terms of intelligence.replymmaunder 18 minutes ago
| root | parent | next [–]
Agreed. I really wish Google would get their act together because I think they have the potential of being faster, cheaper with bigger context windows. They're so great at hardcore science and engineering, but they absolutely suck at products.replybjackman 1 minute ago
| root | parent | next [–]
I think this is being downvoted coz it doesn't seem to be really responding to the thread, and maybe it isn't, but for anyone who hasn't tried Gemini CLI:My experience after a month or so of heavy use is exactly this. The AI is rock solid. I'm pretty consistently impressed with its ability to derive insights from the code. But the client is flaky, the backend is flaky, and the overall experience for me is always "I wish I could just use Claude".(Still, I wouldn't be surprised if this can be fixed over the next few months, it could easily be very competitive IMO).mritchie712 32 minutes ago
| parent | prev | next [–]
Have you used Claude Code? How does it compare?replymmaunder 25 minutes ago
| root | parent | next [–]
It's objectively a big improvement over Claude Code. I'm rooting for anthropic, but they better make a big move or this will kill CC.replyEnPissant 46 minutes ago
| parent | prev | next [–]
My experience with Codex / Gpt-5:- The smartest model I have used. Solves problems better than Opus-4.1.- It can be lazy. With Claude Code / Opus, once given a problem, it will generally work until completion. Codex will often perform only the first few steps and then ask if I want to continue to do the rest. It does this even if I tell it to not stop until completion.- I have seen severe degradation near max context. For example, I have seen it just repeat the next steps every time I tell it to continue and I have to manually compact.I'm not sure if the problems are Gpt-5 or Codex. I suspect a better Codex could resolve them.replybrookst 39 minutes ago
| root | parent | next [–]
Claude seems to have gotten worse for me, with both that kind of laziness and a new pattern where it will write the test, write the code, run the test, and then declare that the test is working perfectly but there are problems in the (new) code that need to be fixed.Very frustrating, and happening more often.replyelliot07 38 minutes ago
| root | parent | next [–]
They for sure nerfed it within the last ~3 weeks. There's a measurable difference in quality.replyconception 30 minutes ago
| root | parent | next [–]
They actually just had a bug fix and it seems like it recently got a lot better in the last week or soreplyM4v3R 37 minutes ago
| root | parent | prev | next [–]
Context degradation is a real problem with all frontier LLMs. As a rule of thumb I try to never exceed 50% of available context window when working with either Claude Sonnet 4 or GPT-5 since the quality drops really fast from there.replyEnPissant 34 minutes ago
| root | parent | next [–]
I've never seen that level of extreme degradation (just making a small random change and repeating the same next steps infinitely) on Claude Code. Maybe Claude Code is more aggressive about auto compaction. I don't think Codex even compacts without /compact.replyJcampuzano2 29 minutes ago
| root | parent | next [–]
I think some of it is not necessarily auto compaction but the tooling built in. For example claude code itself very frequently builds in to remind the model what its working on and should be doing which helps always keeps its tasks in the most recent context, and overall has some pretty serious thought put into its system prompt and tooling.But they have suffered quite a lot of degradation and quality issues recently.To be honest unless Anthropic does something very impactful sometime soon I think they're losing their moat they had with developers as more and more jump to codex and other tools. They kind of massively threw their lead imo.replyEnPissant 26 minutes ago
| root | parent | next [–]
Yeah, I think you are right.replybayesianbot 34 minutes ago
| root | parent | prev | next [–]
I definitely agree with all of those points. I just really prefer it completing steps and asking me if we should continue to next step rather than doing half of the step and telling me it's done. And the context degradation seems quite random - sometimes it hits way earlier, sometimes we go through crazy amount of tokens and it all works out.replytanvach 37 minutes ago
| root | parent | prev | next [–]
I also noticed the laziness compared to Sonnet models but now I feel it’s a good feature. Sonnet models, now I realize, are way too eager to hammer out code with way more likelihood of bugs.replyFergusArgyll 11 minutes ago
| parent | prev | next [–]
It doesn't seem to have any internal tools it can use. For example, web search; It just runs curl in the terminal. Compared to Gemini CLI that's rough but it does handle pasting much better... Maybe I'm just using both wrong...replygizmodo59 2 minutes ago
| root | parent | next [–]
Use --search option when you start codexreplyollybee 6 minutes ago
| root | parent | prev | next [–]
web search too is off by defaultreplysergiotapia 2 minutes ago
| prev | next [–]
I signed up to OpenAI, verified my identity, and added my credit card, bought $10 of credits.But when I installed Codex and tried to make a simple code bugfix, I got rate limited nearly immediately. As in, after 3 "steps" the agent took.Are you meant to only use Codex with their $200 "unlimited" plans? Thanks!replywahnfrieden 0 minutes ago
| parent | next [–]
Use Plus firstreplysergiotapia 0 minutes ago
| root | parent | next [–]
Thank you - so to confirm Codex _requires_ basically the Plus or $200 plans otherwise it just does not work?replylvl155 16 minutes ago
| prev | next [–]
I think it would be cool to see *nix “emulation” integrated into coding AIs. I don’t think it’s necessary to run these agents inside of container as most people are right now. That’s a lot of overhead.replysimonw 14 minutes ago
| parent | next [–]
You mean instead of them running the code that they are writing they pretend to run the code and the model shows what it thinks would happen?I don't like that at all. Actually running the code is the single most effective protection we have against coding mistakes, from both humans and machines.I think it's absolutely worth the complexity and performance
overhead of hooking up a real container environment.Not to mention you can run a useful code execution container in 100MB of RAM on a single CPU (or slice thereof). Simulating that with an LLM takes at least one GPU and 100GB or more of VRAM.replywithinboredom 22 minutes ago
| prev | next [–]
Codex always appears to use spaces, even when the project uses tabs (aka, a Go file). It's so annoying.replyasadm 16 minutes ago
| parent | next [–]
this + any coding conventions should ALWAYS be a post process. DO NOT include them in your prompt, you are losing model accuracy over these tiny things.replywithinboredom 1 minute ago
| root | parent | next [–]
It helps to actually be able to read the diffs of its proposals/changes in the terminal. The changing from tabs -> spaces on every line it touches generally results in unreadable messes.I have a pretty complex project, so I need to keep an eye on it to ensure it doesn't go off the rails and delete all the code to get a build to pass (it wouldn't be the first time).replywahnfrieden 20 minutes ago
| parent | prev | next [–]
Just use a linter hook to standardize stylereplyDifwif 26 minutes ago
| prev [–]
Is this available to use now in Codex? Should I see a new /model?replyandrewmunsell 26 minutes ago
| parent [–]
Yes, but I had to update the Codex CLI manually via NPM to see it. The VS Code extension auto-updated for mereply
Guidelines | FAQ | Lists | API | Security | Legal | Apply to YC | Contact
Search: