Composition in CSS | CSS-Tricks
Skip to main content
CSS-Tricks
Articles
Notes
Links
Guides
Almanac
Picks
Shuffle
Search
cascade CSS specificity
Composition in CSS
Zell Liew
on
Sep 8, 2025
Get affordable and hassle-free WordPress hosting plans with Cloudways â€” start your free trial today.
Tailwind and other utility libraries have been huge proponents of composition. But, to me, their version of composition has always carried a heavy sense of naÃ¯vetÃ©.
I mean, utility composition is basically adding CSS values to the element, one at a timeâ€¦
<div class="p-4 border-2 border-blue-500"> ... </div>
If weâ€™re honest for a minute, how is this composition different from adding CSS rules directly into a class?
/* This is composition too! */
.card {
padding: 1rem;
border: 2px solid var(â€”color-blue-500)
}
That said, I canâ€™t deny the fact that Iâ€™ve been thinking a lot more about composition ever since I began using Tailwind. So, here are a couple of notes that Iâ€™ve gathered together about CSS composition.
Itâ€™s not a new concept
CSS is a composable language by nature. This composition nature is already built into the cascade. Letâ€™s say youâ€™ve decided to style a button with a few properties:
.button {
display: inline-flex;
padding: 0.75em 1.5em;
/* other styles... */
}
You can always tag on other classes to modify the buttonâ€™s appearance:
<button class="button primary"> ... </button>
<button class="button secondary"> ... </button>
.primary { background: orange; }
.secondary { background: pink; }
You can even change the appearance of other elements to a button by adding the .button class:
<a href="#" class="button"> ... </a>
Composition is happening in both cases:
We composed .button onto a
We composed .red onto .button
So, CSS composition has been in existence since forever. We simply donâ€™t talk about composition as a Big Thing because itâ€™s the nature of the language.
Developers take a pretty narrow view of composition
When developers talk about composition in CSS, they always seem to always restrict the definition of composition to the addition of classes in the HTML.
<div class="one two"> ... </div>
Whatâ€™s interesting is that few people, if any, speak about composition within CSS files â€” from the angle of using Sass mixins or advanced Tailwind utilities.
In these cases, we are also composing stylesâ€¦ just not directly in the HTML!
@mixin button () {
display: inline-flex;
padding: 0.75em 1.5em;
/* other styles ... */
}
.button {
@include button;
}
What is composition?
Composition comes from two possible words:
Compose: Put together
Composite: Made up of distinct parts or elements
Both words come from the same Latin root componere, which means to arrange or direct.
In other wordsâ€¦ all work is put together in some way, so all work is composed. This makes me wonder why composition is used in such a limited context. ðŸ¤”
Moving onâ€¦
Composition doesnâ€™t reduce bloat
Class composition reduces CSS bloat only if youâ€™re using utility classes. However, class composition with utility classes is likely to create HTML bloat.
<div class="utility composition">...</div>
<div class="one utility at a time">...</div>
<div class="may create html bloat">...</div>
On the other hand, class composition with selectors might not reduce CSS bloat. But they definitely introduce lesser HTML bloat.
<div class="class composition">...</div>
<div class="card primary">...</div>
<div class="may override properties">...</div>
<div class="less html bloat"> ... </div>
Which is better? Â¯\_(ãƒ„)_/Â¯
HTML bloat and CSS bloat are probably the least of your concerns
We know this:
HTML can contain a huge amount of things and it doesnâ€™t affect performance much.
CSS, too.
500 lines of CSS is approx 12kb to 15kb (according to Claude).
An image typically weighs 150kb or perhaps even more.
For most projects, optimizing your use of images is going to net you better weight reduction than agonizing over utility vs. selector composition.
Refactoring your codebase to decrease CSS bloat is not likely to increase performance much. Maybe a 2ms decrease in load times?
But refactoring your codebase to improve developer recognition and make it easier to style? Much more worth it.
So, Iâ€™d say:
HTML and CSS bloat are pretty inconsequential.
Itâ€™s worthwhile to focus on architecture, structure, and clarity instead.
Advanced compositions
If we zoom out, we can see that all styles we write fall into four categories:
Layouts: Affects how we place things on the page
Typography: Everything font related
Theming: Everything color related
Effects: Nice good to have stuff like gradients, shadows, etc.
Styles from each of these four categories donâ€™t intersect with each other. For example:
font-weight belongs exclusively to the Typography category
colour belongs exclusively to the Theming category
It makes sense to create composable classes per category â€” when thatâ€™s done, you can mix-and-match these classes together to create the final output. Very much like Lego, for the lack of a better example. (Alright, maybe Duplo for the kids?)
So your HTML might end up looking like this, assuming you do class composition for these four categories:
<!-- These are all pseudo classes. Use your imagination for now! -->
<div class="layout-1 layout-2 effects-1">
<h2 class="typography-1 theming-1"> ... </div>
<div class="typography-2"> ... </div>
</div>
A real example of this would be the following, if we used classes from Splendid Styles and Splendid Layouts:
<div class="card vertical elevation-3">
<h2 class="inter-title"> ... </h2>
<div class="prose"> ... </div>
</div>
Iâ€™m writing more about this four-category system and how Iâ€™m creating composable classes in my latest work: Unorthodox Tailwind. Give it a check if youâ€™re interested!
Wrapping up
To sum up:
CSS is composable by nature.
Developers seem to be quite narrow-minded about what composition means in CSS.
You can do composition in the HTML or in the CSS.
Styles we write can be divided into four categories â€” layouts, typography, theming, and effects.
And finally: Splendid Styles contains classes that can aid composition in each of these four categories. Splendid Layouts handles the layout portion. And Iâ€™m writing more about how I create composable classes in my course Unorthodox Tailwind.
TOC
It's not a new concept
Developers take a pretty narrow view of composition
Composition doesn't reduce bloat
HTML bloat and CSS bloat are probably the least of your concerns
Advanced compositions
Wrapping up
Psst! Create a DigitalOcean account and get $200 in free credit for cloud-based hosting and services.
Comments
Paul Permalink to comment# September 9, 2025
Since you mentioned the difference in bloat, this article may be of interest. The author finds that Tailwind and its dependencies resulted in 75kb versus just 8kb without Tailwind. Thatâ€™s multiple round trips to the server for one, and a single trip for the other. Perhaps negligible on a reliable connection, but definitely not great practice.
https://nuejs.org/blog/tailwind-vs-semantic-css/
Reply
son Permalink to comment# September 10, 2025
Tailwind and similar libraries work by applying predefined utility classes directly in the HTML, instead of using external CSS files. While this can make development faster, it often leads to HTML that looks cluttered or bloated. Personally, I prefer using native CSS because it provides a cleaner separation of structure and style, which I believe is better for long-term project architecture.
Reply
Elliott Rodgers Permalink to comment# September 12, 2025
Would it be composition if you had all the CSS in a file. Then have style tags in head of HTML. Maybe to turn off stuff you need to in order to deal with accessiability stuff like animationâ€¦ Light/Dark Modeâ€¦ increase/decrease font size
Reply
Leave a Reply Cancel replyYour email address will not be published. Required fields are marked *Comment * Name *
Email *
Website
Save my name, email, and website in this browser for the next time I comment.
Copy and paste this code: micuno *
Leave this field empty
Î”
CSS-Tricks is powered by DigitalOcean.
Keep up to date on web dev
with our hand-crafted newsletter
DigitalOcean
About DO
Cloudways
Legal stuff
Get free credit!
CSS-Tricks
Contact
Write for CSS-Tricks!
Advertise with us
Social
RSS Feeds
CodePen
Mastodon
Bluesky
Back to Top