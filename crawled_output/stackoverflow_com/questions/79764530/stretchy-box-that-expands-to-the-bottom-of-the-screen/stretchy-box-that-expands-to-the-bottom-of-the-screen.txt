css - Stretchy box that expands to the bottom of the screen - Stack Overflow
Skip to main content
Stack Overflow
About
Products
For Teams
Stack Overflow for Teams
Where developers & technologists share private knowledge with coworkers
Advertising
Reach devs & technologists worldwide about your product, service or employer brand
Knowledge Solutions
Data licensing offering for businesses to build and improve AI tools and models
Labs
The future of collective knowledge sharing
About the company
Visit the blog
Loading…
current community
Stack Overflow
help
chat
Meta Stack Overflow
your communities
Sign up or log in to customize your list.
more stack exchange communities
company blog
Log in
Sign up
Home
Questions
AI Assist
Labs
Tags
Challenges
Chat
Articles
Users
Jobs
Companies
Collectives
Communities for your favorite technologies.
Explore all Collectives
Teams
Ask questions, find answers and collaborate at work with Stack Overflow for Teams.
Try Teams for free
Explore Teams
Teams
Ask questions, find answers and collaborate at work with Stack Overflow for Teams.
Explore Teams
Collectives™ on Stack Overflow
Find centralized, trusted content and collaborate around the technologies you use most.
Learn more about Collectives
Teams
Q&A for work
Connect and share knowledge within a single location that is structured and easy to search.
Learn more about Teams
Stretchy box that expands to the bottom of the screen
Ask Question
Asked
yesterday
Modified
yesterday
Viewed
45 times
0
How can I make the red "Block" stretch to the bottom of the window, pushing "Text below..." below the fold/off the screen?
On load, the top of the block should be below "More stuff above..." and the bottom edge should be at the bottom of the screen
When I scroll down a smidge, the red block should completely fill .site-main (max height == .site-main's height)
After the block reaches its full height, I can keep scrolling as normal to see "Text below..."
<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width" />
<title>Definitive Expanding Block</title>
<style>
:root {
--aside-w: 240px;
}
html, body {
height: 100%;
margin: 0;
}
body {
display: grid;
grid-template-rows: auto 1fr;
grid-template-columns: var(--aside-w) 1fr;
grid-template-areas:
"header header"
"aside
main";
height: 100vh; /* Use height for a more rigid layout */
}
.site-header {
grid-area: header;
padding: 12px;
background: #222;
color: #fff;
}
.site-aside {
grid-area: aside;
padding: 12px;
background: #f3f3f3;
}
.site-main {
grid-area: main;
overflow: auto;
min-height: 0;
padding: 12px;
box-sizing: border-box;
}
.main-inner {
display: flex;
flex-direction: column;
min-height: 100%;
}
.block {
flex-grow: 1;
background: #ff5656;
padding: 12px;
box-sizing: border-box;
overflow: auto;
}
.main-top, .main-after {
flex-shrink: 0;
}
.main-top {
margin-bottom: 12px;
}
.main-after {
margin-top: 12px;
}
.site-main p {
margin: 0;
}
</style>
</head>
<body>
<header class="site-header">Header</header>
<aside class="site-aside">Sidebar</aside>
<main class="site-main">
<div class="main-inner">
<div class="main-top">
<p>Text above…</p>
<p>More stuff above…</p>
</div>
<div class="block">
<h2>Block</h2>
<p>This block now expands to fill the available vertical space.</p>
<p>The layout forces the total content to be taller than the container, pushing the "Text below..." section reliably below the fold.</p>
</div>
<div class="main-after">
<p>Text below…</p>
</div>
</div>
</main>
</body>
</html>
css
Share
Improve this question
Follow
asked yesterday
mpenmpen
285k286286 gold badges895895 silver badges1.3k1.3k bronze badges
Add a comment
|
2 Answers
2
Sorted by:
Reset to default
Highest score (default)
Trending (recent votes count more)
Date modified (newest first)
Date created (oldest first)
2
A bit hacky but you can make the height of the text to be 0 and consider negative bottom margin to cancel the padding. That block of text should be the last one.
:root {
--aside-w: 240px;
}
body {
margin: 0;
}
body {
display: grid;
grid-template-rows: auto 1fr;
grid-template-columns: var(--aside-w) 1fr;
grid-template-areas:
"header header"
"aside
main";
height: 100vh;
}
.site-header {
grid-area: header;
padding: 12px;
background: #222;
color: #fff;
}
.site-aside {
grid-area: aside;
padding: 12px;
background: #f3f3f3;
}
.site-main {
grid-area: main;
overflow: auto;
min-height: 0;
padding: 12px;
box-sizing: border-box;
}
.main-inner {
display: flex;
flex-direction: column;
gap: 12px;
min-height: 100%;
}
.block {
flex-grow: 1;
background: #ff5656;
padding: 12px;
box-sizing: border-box;
overflow: auto;
}
.main-top,
.main-after {
flex-shrink: 0;
}
.main-after {
height: 0;
margin-bottom: -12px;
}
.site-main p {
margin: 0;
}
<header class="site-header">Header</header>
<aside class="site-aside">Sidebar</aside>
<main class="site-main">
<div class="main-inner">
<div class="main-top">
<p>Text above…</p>
<p>More stuff above…</p>
</div>
<div class="block">
<h2>Block</h2>
<p>This block now expands to fill the available vertical space.</p>
<p>The layout forces the total content to be taller than the container, pushing the "Text below..." section reliably below the fold.</p>
</div>
<div class="main-after">
<p>Text below…</p>
</div>
</div>
</main>
Share
Improve this answer
Follow
answered yesterday
Temani AfifTemani Afif
279k2929 gold badges375375 silver badges495495 bronze badges
1
Seems like that only works on load. The .block extends to the bottom of the screen, but then as you scroll down the block should expand until it fills the screen.
mpen
–
mpen
2025-09-14 23:47:14 +00:00
Commented
yesterday
Add a comment
|
0
<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width" />
<title>Definitive Expanding Block</title>
<style>
:root {
--aside-w: 240px;
--pad: 12px;
}
html {
box-sizing: border-box;
}
*, *:before, *:after {
box-sizing: inherit;
}
html, body {
height: 100%;
margin: 0;
}
body {
background: #fff;
display: grid;
grid:
"header header" auto
"aside
main"
1fr
/ var(--aside-w) 1fr;
height: 100vh;
}
.site-header {
grid-area: header;
padding: var(--pad);
background: #222;
color: #fff;
}
.site-aside {
grid-area: aside;
padding: var(--pad);
background: #f3f3f3;
}
.site-main {
/*padding: var(--pad);*/
/*box-sizing: content-box;*/
overflow: auto;
container-name: main;
container-type: size;
}
.content-padding {
padding: var(--pad);
}
.block {
position: relative;
min-height: 300px;
height: 100cqb;
/*height: calc-size(max-content, min(size, 100cqb));*/
background: oklch(0.683 0.205 24.356);
overflow: clip;
}
.block-inner {
position: absolute;
left: 0;
right: 0;
/* top and bottom are dynamic */
top: var(--fill-top, 0px);
bottom: var(--fill-bottom, 0px);
background: lch(55.11 74.99 274.24);
border: 10px solid lch(61.78 74.99 330.35);
/*box-sizing: border-box;*/
padding: var(--pad);
overflow: auto;
}
.taller-filler {
height: 110lvh;
background: lch(95.68% 23.97 91.61);
}
p {
&:first-child {
margin-top: 0;
}
&:last-child {
margin-bottom: 0;
}
}
</style>
<script defer>
// Find the nearest scrollable ancestor (else fall back to window)
function getScrollParent(el) {
let p = el.parentElement;
while (p) {
const s = getComputedStyle(p);
if (/(auto|scroll|overlay)/.test(s.overflowY)) return p;
p = p.parentElement;
}
return window;
}
// Track which containers we've already wired up
const wired = new WeakSet();
function updateFill() {
document.querySelectorAll('.block').forEach(block => {
const inner = block.querySelector('.block-inner');
if (!inner) return;
const container = getScrollParent(block);
const br = block.getBoundingClientRect();
// Container "viewport" metrics
let cTop, cBottom;
if (container === window) {
cTop = 0;
cBottom = document.documentElement.clientHeight;
} else {
const cr = container.getBoundingClientRect();
cTop = cr.top;
cBottom = cr.top + container.clientHeight;
}
// How much of the block is above the container viewport
const overflowTop = Math.max(0, cTop - br.top);
// How much extends below the container viewport
const overflowBottom = Math.max(0, br.bottom - cBottom);
inner.style.setProperty('--fill-top', `${overflowTop}px`);
inner.style.setProperty('--fill-bottom', `${overflowBottom}px`);
});
}
function wireScrollListeners() {
document.querySelectorAll('.block').forEach(block => {
const container = getScrollParent(block);
if (container !== window && !wired.has(container)) {
container.addEventListener('scroll', updateFill, { passive: true });
wired.add(container);
}
});
}
// Initial wiring + updates
addEventListener('DOMContentLoaded', () => {
wireScrollListeners();
updateFill();
});
addEventListener('resize', updateFill);
</script>
</head>
<body>
<header class="site-header">Header</header>
<aside class="site-aside">Sidebar</aside>
<main class="site-main">
<div class="content-padding">
<p class="taller-filler">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Accusamus assumenda consectetur doloribus iure odio optio quam sit vero. Accusamus animi cupiditate
delectus eveniet labore
quae quisquam reiciendis unde vitae. Ea.</p>
<div class="block">
<div class="block-inner">
<h2>Block</h2>
<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ab consequatur, debitis distinctio error est explicabo libero molestias neque nobis odio omnis pariatur placeat
sapiente
temporibus totam ut voluptate. Eius, nobis.</p>
<p>Deserunt iste iure laboriosam magni nam, quisquam quod reiciendis sint tempora voluptate? Alias culpa delectus dicta doloribus, est ipsum laudantium vitae voluptatum! Ad fuga id
laudantium possimus quos vero voluptatum.</p>
<p>Amet at consequatur cumque dignissimos dolor ducimus ea exercitationem fugit illo itaque iure labore laboriosam libero magnam minima mollitia nisi praesentium quas, reiciendis
repellendus saepe sequi sint totam ut voluptate.</p>
<p>Aliquid eum harum illum, minus nam quia quod ratione repellendus! Beatae blanditiis cupiditate ipsa laborum nostrum pariatur perspiciatis possimus! Atque inventore laudantium
magni non
officia perferendis quisquam rem veritatis? Fugiat.</p>
<p>Alias animi commodi, deleniti distinctio dolore eius eum ipsum iste itaque iure iusto laborum modi molestias odio pariatur perspiciatis reiciendis veniam. Accusamus aliquam
aperiam
dolore illo inventore saepe similique. Ea!</p>
<p>Ea eos facilis inventore nostrum quas quo velit vero vitae. Beatae consectetur delectus, dolores eum facere fugit harum incidunt magni maxime nesciunt odio placeat quae quidem
sed sint
voluptas voluptates.</p>
<p>Alias dolorem nulla odio tenetur vel! Amet aut blanditiis culpa dolor ducimus explicabo harum ipsum maiores, mollitia natus nemo non placeat porro, quasi sed similique sit
tenetur vitae
voluptates voluptatibus.</p>
<p>Consectetur cum dolor dolorem dolores incidunt nulla praesentium quod repellendus sunt voluptatem? Alias amet consectetur enim est facere illo impedit, in, minus praesentium quo
reiciendis sit soluta tenetur vero vitae.</p>
<p>Accusantium assumenda autem consequatur corporis culpa cum, deleniti dolores ea eveniet illum iste necessitatibus non quos, rem voluptates? Amet at doloremque enim eos explicabo
magni,
nemo odit reprehenderit saepe sit.</p>
<p>Aperiam blanditiis debitis, deleniti eum fuga, illo laborum magnam magni, mollitia nihil quae quis saepe sequi tenetur unde! Alias architecto enim iure libero recusandae. Dicta,
impedit
nemo. Beatae, hic, sapiente.</p>
<p>Assumenda blanditiis consectetur culpa eius error expedita nesciunt, nihil nobis nostrum odit perspiciatis possimus quae quidem recusandae rerum, ullam unde vero! Ea earum
exercitationem placeat quae veniam! Alias hic, natus?</p>
<p>Aliquid debitis dolorem excepturi fugiat id impedit ipsa, ipsam itaque iure modi molestiae nulla odit officiis sequi sint! Architecto aut corporis dolore hic illum officiis
pariatur?
Aliquid et quisquam ratione!</p>
<p>Accusamus adipisci cum, cumque dolore doloremque esse facilis ipsum minima modi natus officiis pariatur perferendis praesentium quis quisquam sequi sunt! Aliquid at distinctio
dolores
fugiat, nulla odio quia recusandae totam.</p>
<p>Expedita, in voluptatem. Amet architecto culpa delectus dicta eligendi error excepturi incidunt laudantium, libero optio, repellat rerum veniam vitae, voluptate voluptatum!
Consectetur
corporis debitis ex labore laborum molestiae, reiciendis sed.</p>
<p>Alias, architecto consequatur dolorem et eum facere minima officia quis reiciendis repudiandae rerum temporibus. Ab aliquam assumenda cum debitis eveniet maxime minus molestias
placeat
praesentium, quam quibusdam tenetur totam voluptatum!</p>
<p>Ab aperiam beatae, deserunt ducimus ea eius eligendi eum fugit illum ipsa ipsum libero maxime neque nostrum, nulla obcaecati odit perferendis porro possimus qui reiciendis
repudiandae
sequi suscipit. Eligendi, ex.</p>
<p>Architecto assumenda aut culpa, distinctio fugit harum labore, laudantium neque nobis quasi ratione, reprehenderit? Atque culpa eos id illo, ipsam ipsum magni molestiae
necessitatibus
nesciunt numquam quasi totam veritatis voluptates?</p>
<p>Alias commodi doloribus eaque esse harum ipsum laboriosam maxime similique vel voluptatum. At atque dicta dignissimos facilis inventore ipsam iusto! Accusamus cum debitis dolore
ducimus
laborum placeat quibusdam, repellat velit.</p>
<p>Aperiam architecto autem, beatae consectetur, delectus hic illo inventore iure iusto libero magnam magni non nostrum, odio perspiciatis quae voluptatem? Ad aliquid doloribus
officiis
optio praesentium saepe similique ullam vero?</p>
<p>A adipisci alias aperiam dignissimos dolorem doloremque doloribus earum eveniet id illum incidunt laudantium molestias, mollitia obcaecati praesentium quae quas quidem quod quos
rerum
sed similique soluta tempora tempore totam.</p>
</div>
</div>
<p class="taller-filler">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Accusamus assumenda consectetur doloribus iure odio optio quam sit vero. Accusamus animi cupiditate
delectus eveniet labore
quae quisquam reiciendis unde vitae. Ea.</p>
</div>
</main>
</body>
</html>
This seems to work pretty well, but requires JS. The .block "reserves" 100cqb worth of height, and then the size of .block-inner is adjusted as the user scrolls so that it neither flows off the top edge or bottom edge of the viewport.
Share
Follow
edited yesterday
answered yesterday
mpenmpen
285k286286 gold badges895895 silver badges1.3k1.3k bronze badges
Add a comment
|
Your Answer
Thanks for contributing an answer to Stack Overflow!Please be sure to answer the question. Provide details and share your research!But avoid …Asking for help, clarification, or responding to other answers.Making statements based on opinion; back them up with references or personal experience.To learn more, see our tips on writing great answers.
Draft saved
Draft discarded
Sign up or log in
Sign up using Google
Sign up using Email and Password
Submit
Post as a guest
Name
Email
Required, but never shown
Post as a guest
Name
Email
Required, but never shown
Post Your Answer
Discard
By clicking “Post Your Answer”, you agree to our terms of service and acknowledge you have read our privacy policy.
Start asking to get answers
Find the answer to your question by asking.
Ask question
Explore related questions
css
See similar questions with these tags.
The Overflow Blog
Planning to Arm mobile devices with chips that handle AI
Featured on Meta
Community Asks Sprint Announcement - September 2025
stackoverflow.ai - rebuilt for attribution
Policy: Generative AI (e.g., ChatGPT) is banned
New comment UI experiment graduation
New and improved coding challenges
Related
2849
Make a div fill the height of the remaining screen space
1467
How to align content of a div to the bottom
370
Fill remaining vertical space with CSS using display:flex
1358
Can I hide the HTML5 number input’s spin box?
957
How can I position my div at the bottom of its container?
160
Twitter Bootstrap: div in container with 100% height
124
Body height 100% displaying vertical scrollbar
3
Do we include margin in css box model while determining width or height of a element
Hot Network Questions
Insurance company want me to either surrender my totaled car or pay off the negative equity
How can I detect self-intersection points of a single curve using Geometry Nodes?
How many of each type of dice could you possibly need?
Can scriptPubKey be empty in Bitcoin transactions and how would such outputs be spent?
How to disable all the AI features in Firefox to increase performance?
Does the Hebrew word [עִדָּה found in Isaiah compare the righteousness of a believer to a women’s used mentral rag?
Does systemd-cryptenroll encryption with a TPM bind decryption to that TPM?
Statistics on list of industry areas that pure math academics transition to
A million and one constants
How to double chapter numbers and let hyperref do its work correctly
Come vs go in this situation
Making sure a smartphone is off
What does the SH pin on HDMI do?
Why are my fluorescent light fixtures and LED replacements turning on intermittently?
Will gases contained inside a box eventually reach zero temperature?
How can one deal with the case of someone misrepresenting his academic job title?
Confidence interval for difference of probabilities, for paired data
What is the rationale behind the WebAssembly `if` statements behaving like `block` when it comes to breaking (`br`), rather than being transparent?
In GIMP, how do I crop the "invisible" content outside an image's rectange?
Can tubeless rim tape cause a puncture near a tube valve stem?
Line Art strokes render on top of Grease Pencil objects
What is the probability of coming out ahead in the iterated alternating St. Petersburg gamble?
Hat puzzle with rock, paper, scissors
How to tell author that post hoc data manipulation is not okay
more hot questions
Question feed
Subscribe to RSS
Question feed
To subscribe to this RSS feed, copy and paste this URL into your RSS reader.
default
Stack Overflow
Questions
Help
Chat
Products
Teams
Advertising
Talent
Company
About
Press
Work Here
Legal
Privacy Policy
Terms of Service
Contact Us
Your Privacy Choices
Cookie Policy
Stack Exchange Network
Technology
Culture & recreation
Life & arts
Science
Professional
Business
API
Data
Blog
Facebook
Twitter
LinkedIn
Instagram
Site design / logo © 2025 Stack Exchange Inc;
user contributions licensed under
CC BY-SA
.
rev 2025.9.15.33996