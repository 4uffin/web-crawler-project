python - Why does my code return False using Brutal Force finding the Longest Palindrome substring? - Stack Overflow
Skip to main content
Stack Overflow
About
Products
For Teams
Stack Overflow for Teams
Where developers & technologists share private knowledge with coworkers
Advertising
Reach devs & technologists worldwide about your product, service or employer brand
Knowledge Solutions
Data licensing offering for businesses to build and improve AI tools and models
Labs
The future of collective knowledge sharing
About the company
Visit the blog
Loading…
current community
Stack Overflow
help
chat
Meta Stack Overflow
your communities
Sign up or log in to customize your list.
more stack exchange communities
company blog
Log in
Sign up
Home
Questions
AI Assist
Labs
Tags
Challenges
Chat
Articles
Users
Jobs
Companies
Collectives
Communities for your favorite technologies.
Explore all Collectives
Teams
Ask questions, find answers and collaborate at work with Stack Overflow for Teams.
Try Teams for free
Explore Teams
Teams
Ask questions, find answers and collaborate at work with Stack Overflow for Teams.
Explore Teams
Collectives™ on Stack Overflow
Find centralized, trusted content and collaborate around the technologies you use most.
Learn more about Collectives
Teams
Q&A for work
Connect and share knowledge within a single location that is structured and easy to search.
Learn more about Teams
Why does my code return False using Brutal Force finding the Longest Palindrome substring? [closed]
Ask Question
Asked
today
Modified
today
Viewed
92 times
-5
Closed. This question is not reproducible or was caused by typos. It is not currently accepting answers.
This question was caused by a typo or a problem that can no longer be reproduced. While similar questions may be on-topic here, this one was resolved in a way less likely to help future readers.
Closed 12 hours ago.
Improve this question
My code has a problem: when iterating through list S, it returns False, without giving me any indication that there's an error. I've searched Google for possible solutions, but all the answers are similar.
def longest_palindrome(s):
return s == s[::-1]
def find_palindromes_bruteforce(input_word):
palindromes = []
n = len(input_word)
for i in range(n):
for j in range(i + 1, n):
if longest_palindrome(input_word[i:j + 1]):
palindromes.append(input_word[i:j + 1])
return palindromes
s = "babad"
print(longest_palindrome(s))
This is what the terminal returns once it start running:
/usr/local/bin/python3.12 /Users/jaredmccarthy/Desktop/2025/ejercicios_leetcode.py
False
Process finished with exit code 0
longest_palindrome(word) is supposed to check if a word is a palindrome by comparing it with its reverse. then find_palindromes_bruteforce(input_word) takes that input word and iterates over the possible ones checking if it is a palindrome and returns the list of found words.
I'm waiting for the code to return me with that word s = "badad" that will return s = "bab". Is there someone who can explain to me in an easy way how it works and make it work to understand it better? I will appreciate it.
pythonpalindromebrute-force
Share
Improve this question
Follow
edited 16 hours ago
Ajeet Verma
4,11633 gold badges1919 silver badges3131 bronze badges
asked 17 hours ago
Jared McCarthyJared McCarthy
2377 bronze badges
9
1
Because "babad" == "babad"[::-1] is False. You defined find_palindromes_bruteforce but never used it... instead you only call longest_palindrome, which should be called is_palindrome instead btw... please proof read your code before asking.
Julien
–
Julien
2025-09-16 00:21:17 +00:00
Commented
17 hours ago
@Julien is that supposed to find the last letter on the substring S? because is supposed to be able to reach on reverse the word...
Jared McCarthy
–
Jared McCarthy
2025-09-16 00:24:50 +00:00
Commented
17 hours ago
If you don't understand your own code, read your tutorials again. Programming is not about randomly typing code vaguely hoping it will do what you want...
Julien
–
Julien
2025-09-16 00:28:23 +00:00
Commented
17 hours ago
The longest_palindrome() function does not, in fact, find the longest palindrome substring.
It just returns whether or not the initial word is a palindrome...
John Gordon
–
John Gordon
2025-09-16 00:33:29 +00:00
Commented
17 hours ago
1
this code doesn't use recursion so it can't generate error RecursionError: maximum recursion depth exceeded
furas
–
furas
2025-09-16 01:42:57 +00:00
Commented
16 hours ago
|
Show 4 more comments
1 Answer
1
Sorted by:
Reset to default
Highest score (default)
Trending (recent votes count more)
Date modified (newest first)
Date created (oldest first)
2
First you could move code from longest_palindrome to find_palindromes_bruteforce and have all in one function
s = input_word[i:j + 1]
if s == s[::-1]:
palindromes.append(s)
And now running print( find_palindromes_bruteforce(s) ) you get ['bab', 'aba'] - so it gives all palindromes.
Now it needs to search the longest item on this list. If you need only one result (even if there are two the longest palindromes with the same length) then you can use max(..., key=len)
def longest_palindrome(word):
palindromes = find_palindromes_bruteforce(word)
first_max = max(palindromes, key=len)
return first_max
Full working code.
For tests I added d at the end of word to have palindromes = ['bab', 'aba', 'dd']
def longest_palindrome(word):
palindromes = find_palindromes_bruteforce(word)
#print(f"{palindromes = }")
first_max = max(palindromes, key=len)
return first_max
# 'bab'
def find_palindromes_bruteforce(input_word):
palindromes = []
n = len(input_word)
for i in range(n-1):
#print(input_word[i], i, i+2, n)
for j in range(i+1, n):
s = input_word[i:j+1]
#print(' ', i, j+1, s)
if s == s[::-1]:
palindromes.append(s)
return palindromes
s = "babadd"
#print(f"{s = }")
#print(find_palindromes_bruteforce(s))
print(longest_palindrome(s))
If you want all the longest palindromes then you need to change code in longest_palindrome - get all lengths, use max() on lengths, and later filter items which have this max length.
def longest_palindrome(word):
palindromes = find_palindromes_bruteforce(word)
#print(f"{palindromes = }")
max_len = max([len(x) for x in palindromes])
all_max = [x for x in palindromes if len(x) == max_len]
return all_max
# ['bab', 'aba']
Share
Improve this answer
Follow
edited 15 hours ago
answered 15 hours ago
furasfuras
148k1212 gold badges120120 silver badges170170 bronze badges
1 Comment
Add a comment
Jared McCarthy Jared McCarthy 14 hours ago
your explanation really helped a lot. Even if this is O(n³), it already runs faster than what I had before and is not showing false anymore. Ty man it worked. 2025-09-16T02:48:47.893Z+00:00
1
Reply
Copy link
Start asking to get answers
Find the answer to your question by asking.
Ask question
Explore related questions
pythonpalindromebrute-force
See similar questions with these tags.
The Overflow Blog
Planning to Arm mobile devices with chips that handle AI
What an MCP implementation looks like at a CRM company
Featured on Meta
Community Asks Sprint Announcement - September 2025
stackoverflow.ai - rebuilt for attribution
Policy: Generative AI (e.g., ChatGPT) is banned
New comment UI experiment graduation
New and improved coding challenges
Related
493
Why does "not(True) in [False, True]" return False?
940
Why does Python code run faster in a function?
1
Why does the removal of this return statement affect the outcome of the entire recursive function?
0
Finding the longest palindromic substring (suboptimally)
12
Finding the Longest Palindrome Subsequence with less memory
689
Does Python's time.time() return the local or UTC timestamp?
0
Finding All Palindrome Numbers Within A Range Using The Number Of Digits Of The Numbers
2
python and palindromes
Hot Network Questions
Come vs go in this situation
How to save and reuse a calculated distance
where and when to put a good olive oil in focaccia?
Ephemeris Time/Second Tracking
What is the purpose of the neutral line in unbalanced three-phase systems?
Compute the integer hull of a polyhedral set in Mathematica
Strange issue with numerical integration
Does the Hebrew word [עִדָּה found in Isaiah compare the righteousness of a believer to a women’s used menstural rag?
Does Silksong have any missable endings?
What resources are available for identifying a particular Space Shuttle launch?
Kaleidoscopic supernova
How to tell author that post hoc data manipulation is not okay
Is electrolysis of alumina (Al2O3) without cryolite possible to produce pure aluminum?
Is Exercise 5.3.5 of Chong and Yu's book Recursion Theory really correct?
Renderized image pixelated while rendered view correct
How to clear specific byte values inside a 64-bit value without looping
Did alignment charts of old use to have Law on the right (and when did that change)?
How to describe an artist painting a picture?
A function that opens a CSV file
Peg solitaire starting position
Loopy (Slitherlink)
Nodes within tcolorbox that are not recognized
Name the actor by clues
Is there a reason to do multiple tricks off a jump?
more hot questions
lang-py
Stack Overflow
Questions
Help
Chat
Products
Teams
Advertising
Talent
Company
About
Press
Work Here
Legal
Privacy Policy
Terms of Service
Contact Us
Your Privacy Choices
Cookie Policy
Stack Exchange Network
Technology
Culture & recreation
Life & arts
Science
Professional
Business
API
Data
Blog
Facebook
Twitter
LinkedIn
Instagram
Site design / logo © 2025 Stack Exchange Inc;
user contributions licensed under
CC BY-SA
.
rev 2025.9.15.33996