SOAP - Wikipedia
Jump to content
Main menu
Main menu
move to sidebar
hide
Navigation
Main pageContentsCurrent eventsRandom articleAbout WikipediaContact us
Contribute
HelpLearn to editCommunity portalRecent changesUpload fileSpecial pages
Search
Search
Appearance
Donate
Create account
Log in
Personal tools
Donate Create account Log in
Pages for logged out editors learn more
ContributionsTalk
Contents
move to sidebar
hide
(Top)
1
Characteristics
2
History
3
SOAP terminology
Toggle SOAP terminology subsection
3.1
Protocol concepts
3.2
Data encapsulation concepts
3.3
Message sender and receiver concepts
4
Specification
5
SOAP building blocks
6
Transport methods
7
Message format
8
Example message (encapsulated in HTTP)
9
Technical critique
Toggle Technical critique subsection
9.1
Advantages
9.2
Disadvantages
10
See also
11
Notes
12
References
13
Further reading
14
External links
Toggle the table of contents
SOAP
41 languages
العربيةAzərbaycancaবাংলাБългарскиCatalàČeštinaDanskDeutschEestiEspañolEsperantoEuskaraفارسیFrançaisGalego한국어HrvatskiBahasa IndonesiaÍslenskaItalianoעבריתMagyarമലയാളംNederlands日本語Norsk bokmålPolskiPortuguêsРусскийSimple EnglishSlovenčinaSuomiSvenskaதமிழ்ไทยTürkçeУкраїнськаاردوTiếng ViệtYorùbá中文
Edit links
ArticleTalk
English
ReadEditView history
Tools
Tools
move to sidebar
hide
Actions
ReadEditView history
General
What links hereRelated changesUpload filePermanent linkPage informationCite this pageGet shortened URLDownload QR code
Print/export
Download as PDFPrintable version
In other projects
Wikidata item
Appearance
move to sidebar
hide
From Wikipedia, the free encyclopedia
Messaging protocol for web services
This article is about the computer network protocol. For the IBM 650 assembly language, see Symbolic Optimal Assembly Program. For surfactants used for cleaning, see Soap. For other uses, see Soap (disambiguation).
SOAPStatusActiveFirst publishedInitially as XML-RPC in June 1998; 27 years ago (June 1998)Latest version1.227 April 2007; 18 years ago (2007-04-27)DomainText-based protocolLicenseCopyright by W3C, implementations are royalty-freeWebsitew3.org/TR/soap12/
Internet protocol suite
Application layer
SOAP
BGP
DHCP (v6)
DNS
FTP
HTTP (HTTP/3)
HTTPS
IMAP
IPP
IRC
LDAP
MGCP
MQTT
NNTP
NTP
OSPF
POP
PTP
ONC/RPC
RTP
RTSP
RIP
SIP
SMTP
SNMP
SSH
Telnet
TLS/SSL
XMPP
more...
Transport layer
TCP
UDP
DCCP
SCTP
RSVP
QUIC
more...
Internet layer
IP
v4
v6
ICMP (v6)
NDP
ECN
IGMP
IPsec
more...
Link layer
ARP
Tunnels
PPP
MAC
more...
vte
This article needs additional citations for verification. Please help improve this article by adding citations to reliable sources. Unsourced material may be challenged and removed.Find sources: "SOAP" – news · newspapers · books · scholar · JSTOR (December 2023) (Learn how and when to remove this message)
SOAP (originally an acronym for Simple Object Access Protocol)[a] is a messaging protocol specification for exchanging structured information in the implementation of web services in computer networks. It uses XML Information Set for its message format, and relies on application layer protocols, most often Hypertext Transfer Protocol (HTTP), although some legacy systems communicate over Simple Mail Transfer Protocol (SMTP), for message negotiation and transmission.
Characteristics[edit]
SOAP provides the Messaging Protocol layer of a web services protocol stack for web services. It is an XML-based protocol consisting of three parts:
an envelope, which defines the message structure[1] and how to process it
a set of encoding rules for expressing instances of application-defined datatypes
a convention for representing procedure calls and responses
SOAP has three major characteristics:
extensibility (security and WS-Addressing are among the extensions under development)
neutrality (SOAP can operate over any protocol such as HTTP, SMTP, TCP, UDP)
independence (SOAP allows for any programming model)
As an example of what SOAP procedures can do, an application can send a SOAP request to a server that has web services enabled—such as a real-estate price database—with the parameters for a search. The server then returns a SOAP response (an XML-formatted document) with the resulting data, e.g., prices, location, features. Since the generated data comes in a standardized machine-parsable format, the requesting application can then integrate it directly.
The SOAP architecture consists of several layers of specifications for:
message format
Message Exchange Patterns (MEP)
underlying transport protocol bindings
message processing models
protocol extensibility
SOAP evolved as a successor of XML-RPC, though it borrows its transport and interaction neutrality from Web Service Addressing[2] and the envelope/header/body from elsewhere (probably from WDDX).[citation needed]
History[edit]
SOAP was designed as an object-access protocol and released as XML-RPC in June 1998 as part of Frontier 5.1 by Dave Winer, Don Box, Bob Atkinson, and Mohsen Al-Ghosein for Microsoft, where Atkinson and Al-Ghosein were working.[3]
The specification was not made available until it was submitted to IETF 13 September 1999.[4][5] According to Don Box, this was due to politics within Microsoft.[6] Because of Microsoft's hesitation, Dave Winer shipped XML-RPC in 1998.[7]
The submitted Internet Draft did not reach RFC status and is therefore not considered a "web standard" as such. Version 1.1 of the specification was published as a W3C Note on 8 May 2000.[8] Since version 1.1 did not reach W3C Recommendation status, it can not be considered a "web standard" either. Version 1.2 of the specification, however, became a W3C recommendation on June 24, 2003. SOAP originally stood for "Simple Object Access Protocol" but version 1.2 of the standard dropped this acronym.[9]
The SOAP specification[10] was
maintained by the XML Protocol Working Group[11] of the World Wide Web Consortium until the group was closed 10 July 2009.
After SOAP was first introduced, it became the underlying layer of a more complex set of web services, based on WSDL, XSD and UDDI. These different services, especially UDDI, have proved to be of far less interest,[citation needed] but an appreciation of them gives a complete understanding of the expected role of SOAP compared to how web services have actually evolved.[according to whom?]
SOAP terminology[edit]
SOAP specification can be broadly defined to be consisting of the following three conceptual components: protocol concepts, encapsulation concepts and network concepts.[12]
Protocol concepts[edit]
SOAP
This is a set of rules formalizing and governing the format and processing rules for information exchanged between a SOAP sender and a SOAP receiver.
SOAP nodes
These are physical/logical machines with processing units which are used to transmit/forward, receive and process SOAP messages. These are analogous to nodes in a network.
SOAP roles
Over the path of a SOAP message, all nodes assume a specific role. The role of the node defines the action that the node performs on the message it receives. For example, a role "none" means that no node will process the SOAP header in any way and simply transmit the message along its path.
SOAP protocol binding
A SOAP message needs to work in conjunction with other protocols to be transferred over a network. For example, a SOAP message could use TCP as a lower layer protocol to transfer messages. These bindings are defined in the SOAP protocol binding framework.[13]
SOAP features
SOAP provides a messaging framework only. However, it can be extended to add features such as reliability, security etc. There are rules to be followed when adding features to the SOAP framework.
SOAP module
A collection of specifications regarding the semantics of SOAP header to describe any new features being extended upon SOAP. A module needs to realize zero or more features. SOAP requires modules to adhere to prescribed rules.[14]
Data encapsulation concepts[edit]
SOAP message
Represents the information being exchanged between 2 SOAP nodes.
SOAP envelope
It is the enclosing element of an XML message identifying it as a SOAP message.
SOAP header block
A SOAP header can contain more than one of these blocks, each being a discrete computational block within the header. In general, the SOAP role information is used to target nodes on the path. A header block is said to be targeted at a SOAP node if the SOAP role for the header block is the name of a role in which the SOAP node operates. (ex: A SOAP header block with role attribute as ultimateReceiver is targeted only at the destination node which has this role. A header with a role attribute as next is targeted at each intermediary as well as the destination node.)
SOAP header
A collection of one or more header blocks targeted at each SOAP receiver.
SOAP body
Contains the body of the message intended for the SOAP receiver. The interpretation and processing of SOAP body is defined by header blocks.
SOAP fault
In case a SOAP node fails to process a SOAP message, it adds the fault information to the SOAP fault element. This element is contained within the SOAP body as a child element.
Message sender and receiver concepts[edit]
SOAP sender
The node that transmits a SOAP message.
SOAP receiver
The node receiving a SOAP message. (Could be an intermediary or the destination node).
SOAP message path
The path consisting of all the nodes that the SOAP message traversed to reach the destination node.
Initial SOAP sender
This is the node which originated the SOAP message to be transmitted. This is the root of the SOAP message path.
SOAP intermediary
All the nodes in between the SOAP originator and the intended SOAP destination. It processes the SOAP header blocks targeted at it and acts to forward a SOAP message towards an ultimate SOAP receiver.
Ultimate SOAP receiver
The destination receiver of the SOAP message. This node is responsible for processing the message body and any header blocks targeted at it.
Specification[edit]
SOAP structure
The SOAP specification defines the messaging framework, which consists of:
The SOAP processing model, defining the rules for processing a SOAP message[15]
The SOAP extensibility model defining the concepts of SOAP features and SOAP modules[15]
The SOAP underlying protocol binding framework describing the rules for defining a binding to an underlying protocol that can be used for exchanging SOAP messages between SOAP nodes[15]
The SOAP message construct defining the structure of a SOAP message[15]
SOAP building blocks[edit]
A SOAP message is an ordinary XML document containing the following elements:
Element
Description
Required
Envelope
Identifies the XML document as a SOAP message.
Yes
Header
Contains header information.
No
Body
Contains call and response information.
Yes
Fault
Provides information about errors that occurred while processing the message.
No
Transport methods[edit]
Both SMTP and HTTP are valid application layer protocols used as transport for SOAP, but HTTP has gained wider acceptance as it works well with today's internet infrastructure; specifically, HTTP works well with network firewalls. SOAP may also be used over HTTPS (which is the same protocol as HTTP at the application level, but uses an encrypted transport protocol underneath) with either simple or mutual authentication; this is the advocated WS-I method to provide web service security as stated in the WS-I Basic Profile 1.1.
This is a major advantage over other distributed protocols like GIOP/IIOP or DCOM, which are normally filtered by firewalls. SOAP over AMQP is yet another possibility that some implementations support.
SOAP also has an advantage over DCOM that it is unaffected by security rights configured on the machines that require knowledge of both transmitting and receiving nodes. This lets SOAP be loosely coupled in a way that is not possible with DCOM.
There is also the SOAP-over-UDP OASIS standard.
Message format[edit]
XML Information Set was chosen as the standard message format because of its widespread use by major corporations and open source development efforts. Typically, XML Information Set is serialized as XML. A wide variety of freely available tools significantly eases the transition to a SOAP-based implementation. The somewhat lengthy syntax of XML can be both a benefit and a drawback. While it facilitates error detection and avoids interoperability problems such as byte-order (endianness), it can slow processing speed and can be cumbersome. For example, CORBA, GIOP, ICE, and DCOM use much shorter, binary message formats. On the other hand, hardware appliances are available to accelerate processing of XML messages.[16][17] Binary XML is also being explored as a means for streamlining the throughput requirements of XML.
XML messages by their self-documenting nature usually have more 'overhead' (e.g., headers, nested tags, delimiters) than actual data in contrast to earlier protocols where the overhead was usually a relatively small percentage of the overall message.
In financial messaging SOAP was found to result in a 2–4 times larger message than previous protocols FIX (Financial Information Exchange) and CDR (Common Data Representation).[18]
XML Information Set does not have to be serialized in XML. For instance, CSV and JSON XML-infoset representations exist. There is also no need to specify a generic transformation framework. The concept of SOAP bindings allows for specific bindings for a specific application. The drawback is that both the senders and receivers have to support this newly defined binding.
Example message (encapsulated in HTTP)[edit]
The message below requests a stock price for AT&T (stock ticker symbol "T").
POST /InStock HTTP/1.1
Host: www.example.org
Content-Type: application/soap+xml; charset=utf-8
Content-Length: 299
SOAPAction: "http://www.w3.org/2003/05/soap-envelope"
<?xml version="1.0"?>
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:m="http://www.example.org">
<soap:Header>
</soap:Header>
<soap:Body>
<m:GetStockPrice>
<m:StockName>T</m:StockName>
</m:GetStockPrice>
</soap:Body>
</soap:Envelope>
Technical critique[edit]
This section needs additional citations for verification. Please help improve this article by adding citations to reliable sources in this section. Unsourced material may be challenged and removed. (August 2020) (Learn how and when to remove this message)
Advantages[edit]
SOAP's neutrality characteristic explicitly makes it suitable for use with any transport protocol. Implementations often use HTTP as a transport protocol, but other popular transport protocols can be used. For example, SOAP can also be used over SMTP, JMS[19][20] and message queues.
SOAP, when combined with HTTP post/response exchanges, tunnels easily through existing firewalls and proxies, and consequently doesn't require modifying the widespread computing and communication infrastructures that exist for processing HTTP post/response exchanges.
SOAP has available to it all the facilities of XML, including easy internationalization and extensibility with XML Namespaces.
Disadvantages[edit]
When using standard implementation and the default SOAP/HTTP binding, the XML infoset is serialized as XML. To improve performance for the special case of XML with embedded binary objects, the Message Transmission Optimization Mechanism was introduced.
When relying on HTTP as a transport protocol and not using Web Services Addressing or an Enterprise Service Bus, the roles of the interacting parties are fixed. Only one party (the client) can use the services of the other.
SOAP is less "simple" than the name would suggest. The verbosity of the protocol, low parsing speed of XML, and lack of a standardized interaction model led to the dominance of services using the HTTP protocol more directly. See, for example, REST.
Being protocol-agnostic, SOAP is unable to take advantage of protocol-specific features and optimizations such as REST's Uniform Interface or caching – instead having to reimplement them (as with WS-Addressing).
See also[edit]
SOAP with Attachments
SOAP with Attachments API for Java
SOAP-over-UDP
List of web service protocols
Message Transmission Optimization Mechanism (MTOM)
XML-binary Optimized Packaging (XOP)
Extensible User Interface Protocol (XUP) –
a SOAP-based UI protocol
WebSocket
Web Services Security
WS-Security based products and services
Notes[edit]
^ Since version 1.2 of the specification it is no longer an acronym for Simple Object Access Protocol
References[edit]
^
Hirsch, Frederick; Kemp, John; Ilkka, Jani (2007-01-11). Mobile Web Services: Architecture and Implementation. John Wiley & Sons (published 2007). p. 27. ISBN 9780470032596. Retrieved 2014-09-15. Simple Object Access Protocol (SOAP) defines a messaging envelope structure designed to carry application payload in one portion of the envelope (the message body) and control information in another (the message header).
^ "Web Services Addressing (WS-Addressing)". www.w3.org. Archived from the original on 2016-09-25. Retrieved 2016-09-15.
^ "Exclusive .NET Developer's Journal "Indigo" Interview with Microsoft's Don Box". Dotnet.sys-con.com. Archived from the original on 2019-01-06. Retrieved 2012-10-04.
^ "XML Cover Pages on the history of SOAP". Coverpages.org. Archived from the original on 2001-03-03. Retrieved 2003-07-22.
^ "SOAP: Simple Object Access Protocol". Ietf Datatracker. September 1999. Archived from the original on 2021-02-25. Retrieved 2015-09-20.
^ "Don Box on the history of SOAP". XML.com. 2001-04-04. Archived from the original on 2015-06-18. Retrieved 2015-09-20.
^ "XML-RPC for Newbies". 1998-07-14. Archived from the original on October 12, 1999.
^ "W3C Note on Simple Object Access Protocol (SOAP) 1.1". W3C. 2000-05-08. Archived from the original on 2021-03-04. Retrieved 2015-09-20.
^ "SOAP Version 1.2 Part 1: Messaging Framework (Second Edition)". W3C. April 27, 2007. Archived from the original on 2012-06-19. Retrieved 2012-06-15. Note: In previous versions of this specification the SOAP name was an acronym. This is no longer the case. (Underneath section 1. Introduction)
^ "SOAP Specifications". W3C. Archived from the original on 2021-04-15. Retrieved 2014-03-29.
^ "W3C XML Protocol Working Group". W3C. Archived from the original on 2018-12-25. Retrieved 2014-03-29.
^ "SOAP Version 1.2 Part 1: Messaging Framework (Second Edition)". www.w3.org. Archived from the original on 2016-09-20. Retrieved 2016-09-14.
^ "Binding Framework Proposal". www.w3.org. Archived from the original on 2017-07-11. Retrieved 2016-09-14.
^ "SOAP Version 1.2 Part 1: Messaging Framework (Second Edition)". www.w3.org. Archived from the original on 2016-09-20. Retrieved 2016-09-14.
^ a b c d "SOAP Version 1.2 Part 1: Messaging Framework (Second Edition)". www.w3.org. Archived from the original on 2017-04-02. Retrieved 2020-06-24.
^ "IBM Datapower". 306.ibm.com. 2011-11-30. Archived from the original on 2008-06-22. Retrieved 2012-10-04.
^ "IBM Zurich XML Accelerator Engine" (PDF). Archived from the original (PDF) on 2012-09-30. Retrieved 2012-10-04.
^ "Evaluating SOAP for High Performance Business Applications: Real-Time Trading Systems". Tenermerx Pty Ltd University of Technology, Sydney. 2011-11-30. Archived from the original on 2013-08-10. Retrieved 2013-03-14.
^ "SOAP over JMS protocol". IBM. Archived from the original on March 22, 2020. Retrieved March 22, 2020.
^ "SOAP-JMS FAQ". SOAP-JMS Binding Working Group. Archived from the original on July 17, 2017. Retrieved March 22, 2020.
Further reading[edit]
Benoît Marchal, "Soapbox: Why I'm using SOAP", IBM
Uche Ogbuji, "Tutorial: XML messaging with SOAP", Principal Consultant, Fourthought, Inc.
External links[edit]
W3C SOAP page
SOAP Version 1.2 specification
Create SOAP Message in Java
vteWorld Wide Web Consortium (W3C)Products,standardsRecommendations
ActivityPub
Activity Streams
ARIA
Canonical XML
CDF
CSS
Animations
Flexbox
Grid
DOM
EXI
EmotionML
Geolocation API
HTML
HTML5
IndexedDB
ITS
JSON-LD
Linked Data Notifications
MathML
Micropub
OWL
PLS
RDF
Schema
RDFa
SISR
SKOS
SMIL
SOAP
SRGS
SRI
SSML
SVG
Filter Effects
SCXML
SHACL
SPARQL
Timed text
VoiceXML
WebAssembly
WoT
TD
Web storage
WSDL
Webmention
WebSub
WebVTT
WOFF
XHTML
+RDFa
XML
Base
Encryption
Events
Information Set
Namespace
Schema
Signature
XForms
XInclude
XLink
XOP
XPath
2.0
3.x
XPointer
XProc
XQuery
XSL
XSL-FO
XSLT
elements
Notes
IndieAuth
XAdES
XBL
XHTML+SMIL
XUP
Working drafts
CCXML
CURIE
EME
InkML
MSE
RIF
SMIL Timesheets
sXBL
WebGPU
WebXR
XFDL
XFrames
XMLHttpRequest
Guidelines
Web Content Accessibility Guidelines
Initiative
Markup Validation Service
Web Accessibility Initiative
Web Components
Deprecated
C-HTML
HDML
JSSS
PGML
VML
WebPlatform
Obsoleted
P3P
XHTML+MathML+SVG
Groups,organizations
WHATWG
Defunct: World Wide Web Foundation
Elected
AB
Board
TAG
Working
CSS
SVG
WebAssembly
WebAuthn
Community, business
Web Advertising BG
WebAssembly CG
Closed
Device Description (DDWG)
HTML
Multimodal Interaction Activity (MMI)
Software
CERN httpd
Libwww
Browsers
Line Mode (1990–)
Arena (1993–98)
Agora (1994–97)
Argo (1994–97)
Amaya (browser/editor, 1996–2012)
Conferences
International World Wide Web Conference (IW3C)
Steering Committee (IW3C2)
First conference ("WWW1", 1994)
Authority control databases: National United StatesIsrael
Retrieved from "https://en.wikipedia.org/w/index.php?title=SOAP&oldid=1304011918"
Categories: Computer-related introductions in 1998Application layer protocolsRemote procedure callWorld Wide Web Consortium standardsXML-based standardsHidden categories: Articles with short descriptionShort description is different from WikidataArticles needing additional references from December 2023All articles needing additional referencesAll articles with unsourced statementsArticles with unsourced statements from August 2011Articles with unsourced statements from March 2025All articles with specifically marked weasel-worded phrasesArticles with specifically marked weasel-worded phrases from March 2025Articles needing additional references from August 2020
This page was last edited on 3 August 2025, at 12:04 (UTC).
Text is available under the Creative Commons Attribution-ShareAlike 4.0 License;
additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization.
Privacy policy
About Wikipedia
Disclaimers
Contact Wikipedia
Code of Conduct
Developers
Statistics
Cookie statement
Mobile view
Search
Search
Toggle the table of contents
SOAP
41 languages
Add topic