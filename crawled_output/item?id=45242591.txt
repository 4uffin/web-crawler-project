OCSP Service Has Reached End of Life | Hacker NewsHacker Newsnew | past | comments | ask | show | jobs | submitloginOCSP Service Has Reached End of Life (letsencrypt.org)85 points by pfexec 3 hours ago
| hide | past | favorite | 9 comments
lol768 1 hour ago
| next [–]
The ship has very much sailed now with ballot SC63, and this is the result, but I still don't think CRLs are remotely a perfect solution (nor do I think OCSP was unfixable). You run into so many problems with the size of them, the updates not propagating immediately etc. It's just an ugly solution to the problem, that you then have to introduce further hacks (Bloom filters) atop of it all to make the whole mess work. I'm glad that Mozilla have done lots of work in this area with CRLite, but it does all feel like a bodge.The advantages of OCSP were that you got a real-time understanding of the status of a certificate and you had no need to download large CRLs which become stale very quickly. If you set security.ocsp.require in the browser appropriately then you didn't have any risk of the browser failing open, either. I did that in the browser I was daily-driving for years and can count on one hand the number of times I ran into OCSP responder outages.The privacy concerns could have been solved through adoption of Must-Staple, and you could then operate the OCSP responders purely for web-servers and folks doing research.And let's not pretend users aren't already sending all the hostnames they are visiting to their selected DNS server. Why is that somehow okay, but OCSP not?replyekr____ 1 hour ago
| parent | next [–]
The problem with requiring OCSP stapling is that it's not practically enforceable without breakage.The underlying dynamics of any change to the Web ecosystem is that it has to be incrementally deployable, in the sense that when element A changes it doesn't experience breakage with the existing ecosystem. At present, approximately no Web servers do OCSP stapling, so any browser which requires it will just not work. In the past, when browsers want to make changes like this, they have had to give years of warning and then they can only actually make the change once nearly the entire
ecosystem has switched and so you have minimal breakage. This is a huge effort an only worth doing when you have a real problem.As a reference point, it took something like 7 years to disable SHA-1 in browsers [0], and that was an easier problem because (1) CAs were already transitioning (2) it didn't require any change to the servers, unlike OCSP stapling which requires them to regularly fetch OCSP responses [1] and (3) there was a clear security reason to make the change. By contrast, with Firefox's introduction of CRLite, all the major browsers now have some central revocation system, which works today as opposed to years from now and doesn't require any change to the servers.[0] https://security.googleblog.com/2014/09/gradually-sunsetting...
[1] As an aside it's not clear that OCSP stapling is better than short-lived certs.replyGauntletWizard 1 hour ago
| prev [–]
Ocsp has always represented a terrible design. If clients require it, then it becomes just a override on the not after date included in the certificate, that requires online access to the cert server. If it is not required, then it is useless, because blocking the ocsp responses is well within the capabilities of any man in the middle attack, and makes the servers themselves DDOS attack targets.The alternative to the privacy nightmare is ocsp stapling, which has the first problem once again - it adds complexity to the protocol just to add an override of the not after attribute, when the not after attribute could be updated just as easily with the original protocol, reissuing the certificate. It was a Band-Aid on the highly manual process of certain issuance that once dominated the space.Good riddance to ocsp, I for one will not miss it.replyjeroenhd 59 minutes ago
| parent | next [–]
OCSP stapling was a good solution in the age of certificates that were valid for 10 years (which was the case for basic HTTPS certificates back in 2011 when OCSP stapling was introduced). In the age of 90 day certificates (to be reduced to a maximum of 47 days in a few years), it's not quite as necessary any more, but I don't think OCSP stapling is that problematic a solution.Certificates in air-gapped networks are problematic, but that problem can be solved with dedicated CRL-only certificate roots that suffer all of the downsides of CRLs for cases where OCSP stapling isn't available.Nobody will miss OCSP now that it's dead, but assuming you used stapling I think it was a decent solution to a difficult problem that plagued the web for more than a decade and a half.replytremon 16 minutes ago
| root | parent | next [–]
But that 47-day lifetime is enforced by the certificate authority, not by the browser, right? So a bad actor can still issue a multi-year certificate for itself, and in the absence of side-channel verification the browser is none the wiser. Or will browsers be instructed to reject long-lived certificates under specific conditions?replyavianlyric 12 minutes ago
| root | parent | next [–]
> So a bad actor can still issue a multi-year certificate for itself, and in the absence of side-channel verification the browser is none the wiser.How would a bad actor do that without a certificate authority being involved?replyarccy 12 minutes ago
| root | parent | prev | next [–]
the browsers will verify, and every cert will be checked against transparency logs. you won't be able to hide a long lived cert for very long.replylayer8 21 minutes ago
| parent | prev [–]
> the not after attribute could be updated just as easily with the original protocol, reissuing the certificate.That's not a viable solution if the server you want to verify is compromised. The point of CRL and OCSP is exactly to ask the authority one higher up, without the entity you want to verify being able to interfere.In non-TLS uses of X.509 certificates, OCSP is still very much a thing, by the way, as there is no real alternative for longer-lived certificates.replyarccy 14 minutes ago
| root | parent [–]
actually that's pretty close to where we're going with ever shorter certificate lifetimes...reply
Guidelines | FAQ | Lists | API | Security | Legal | Apply to YC | Contact
Search: