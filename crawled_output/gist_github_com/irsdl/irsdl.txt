irsdlâ€™s gists Â· GitHub
Skip to content
Search Gists
Search Gists
All gists
Back to GitHub
Sign in
Sign up
SignÂ in
SignÂ up
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
You switched accounts on another tab or window. Reload to refresh your session.
Dismiss alert
Instantly share code, notes, and snippets.
ðŸ’­
< âŠ™ ÍœÊ–à²  />
Soroush Dalili
irsdl
ðŸ’­
< âŠ™ ÍœÊ–à²  />
849
followers
Â·
0
following
SecProject Ltd
UK, Worcestershire
https://soroush.me/
X
@irsdl
https://secproject.com/
View GitHub Profile
All gists
14
Forked
5
Starred
2
Sort
Recently created
Least recently created
Recently updated
Least recently updated
Sort
Recently created
Least recently created
Recently updated
Least recently updated
1 file
0 forks
0 comments
3 stars
irsdl
/ burp-bambdas-repeater-extract-apply.bambda
Created
September 16, 2025 12:11
A generic Burp Suite Bambdas Custom Action that finds the most recent Proxy history entry matching configurable filters (host/path/method/status/scope/highlight; plus request/response regex gates), extracts values (e.g., Cookie, aura.context, aura.token) via regex, and applies them to the current Repeater requestâ€”replacing the Cookie header and â€¦
// ============================================================================
// Repeater Action: Pull tokens/values from Proxy History & Apply to THIS item
// ----------------------------------------------------------------------------
// WHAT IT DOES
//
1) Scans Proxy history (most recent first) for an entry that matches your filters.
//
2) Extracts values (Cookie header, form params, etc.) via regex extractors.
//
3) Applies the extracted values to the CURRENT Repeater request (requestResponse).
//
// HOW TO USE / EDIT (TL;DR)
//
- Set filters in CONFIG (host/path/method/status/in-scope/highlight). Blank = ignored.
1 file
0 forks
0 comments
3 stars
irsdl
/ get_access_token_from_proxy.java
Created
August 29, 2025 20:56
This is an example of a Burp Suite Action Script that can be used in Repeater. It extracts the `access_token` parameter from the most recent matching request in the Proxy tab and updates the Authorization Bearer header with the new value.
// @irsdl
// === Config: set what you want to match ===
final String TARGET_HOST
= "oauth.example.io"; // target domain
final String PATH_PREFIX
= "/auth/realms/onba/openid-connect/token";
// match exact or any child path
final short STATUS_CODE = 200; // match the status code where the response has access_token
// Build a ProxyHistoryFilter that only matches completed host+path hits
burp.api.montoya.proxy.ProxyHistoryFilter filter = new burp.api.montoya.proxy.ProxyHistoryFilter() {
@Override
public boolean matches(burp.api.montoya.proxy.ProxyHttpRequestResponse rr) {
1 file
0 forks
0 comments
2 stars
irsdl
/ BurpSuiteScriptMatchReplaceResponseExample.java
Created
August 23, 2025 21:12
Burp Suite Script Match/Replace in Response Example
if(requestResponse.hasResponse() && requestResponse.request().url().contains("/irsdl")){
var respBody = requestResponse.response().bodyToString();
respBody = respBody.replaceAll("test|foobar", "example");
return requestResponse.response().withBody(respBody);
}else{
return requestResponse.response();
}
1 file
6 forks
2 comments
11 stars
irsdl
/ update_cookie_BambdaCA.java
Last active
July 25, 2025 12:13
Automatically updates the Cookie header in Burp Repeater requests using Set-Cookie values from responses. This Bambda CustomAction preserves all existing cookies and only updates or adds values when necessary â€” ensuring session continuity without overwriting unrelated cookies.
// Revision 1 - originally developed by chatGPT for @irsdl
// Revision 2 - improved by ChatGPT to be more efficient using Burp APIs!
// Automatically updates the Cookie header in Burp Repeater requests using Set-Cookie values from responses. This Bambda CustomAction preserves all existing cookies and only updates or adds values when necessary â€” ensuring session continuity without overwriting unrelated cookies.
// 1. Grab the request & response
var request
= requestResponse.request();
var response = requestResponse.response();
// 2. Pull any Set-Cookie cookies from the response
var responseCookies = response.cookies();
1 file
0 forks
0 comments
0 stars
irsdl
/ AWS-CLI-V2_Burp-Suite.txt
Created
January 16, 2025 20:41
â€” forked from 6e726d/AWS-CLI-V2_Burp-Suite.txt
HowTo set up AWS CLI version 2 to use Burp Suite
$ # HowTo set up AWS CLI version 2 to use Burp Suite
$
$ # Requirements: Burp Suite, curl
$
$ # 1. Installing AWS CLI version 2, configure and test
$
$ curl https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip -o Downloads/awscliv2.zip
% Total
% Received % Xferd
Average Speed
Time
Time
Time
Current
Dload
Upload
Total
Spent
Left
Speed
100 33.5M
100 33.5M
0
0
6825k
0
0:00:05
0:00:05 --:--:-- 7290k
1 file
1 fork
1 comment
8 stars
irsdl
/ urlhostname_test.js
Created
March 14, 2024 10:54
To evaluate how `URL(url).hostname` in JS handles discarded characters and character conversions in domain names.
// by @irsdl
// This script identifies anomalies in how JS parses the URL using `URL(url).hostname`:
// 1- Characters that are ignored when present in the domain name.
// 2- Characters that can replace ASCII characters in domain names and still be parsed correctly. In here we want letter S in `soroush.me`
// You can try running this script in your browser's dev console or at https://www.jdoodle.com/execute-nodejs-online/
// I am sure this must have been looked at before but I cannot find a reference
for (let i = 0; i <= 0xFFFF; i++) {
const unicodeChar = String.fromCharCode(i);
const urlString = `http://sorous${unicodeChar}h.me/blog/`;
1 file
3 forks
0 comments
14 stars
irsdl
/ bambdas_highlighter.java
Created
November 27, 2023 21:54
Highlighting case using Burp Suite Bambda
// by @irsdl
boolean manualColorHighlightEnabled = true; // e.g. BurpRed anywhere in the request
boolean pwnFoxColorHighlightEnabled = true; // to support PwnFox Firefox extension containers
// BEGIN HIGHLIGHT LOGIC {
boolean hasAlreadyBeenColoured = false;
/* Manual highlight logic to see something like BurpRed */
if(manualColorHighlightEnabled){
Pattern manualHighlightPattern = Pattern.compile("burp([a-z]{3,7}+)", Pattern.CASE_INSENSITIVE); // like burpRed or burpYellow
1 file
4 forks
0 comments
3 stars
irsdl
/ PoC_CVE-2021-28482.py
Created
September 7, 2021 21:15
â€” forked from testanull/PoC_CVE-2021-28482.py
PoC of CVE-2021-28482
import requests
import time
import sys
from base64 import b64encode
from requests_ntlm2 import HttpNtlmAuth
from urllib3.exceptions import InsecureRequestWarning
from urllib import quote_plus
requests.packages.urllib3.disable_warnings(category=InsecureRequestWarning)
2 files
1 fork
0 comments
1 star
irsdl
/ pyscripter_snippets.py
Last active
January 5, 2024 05:04
â€” forked from lanmaster53/pyscripter-snippets.py
Burp Python Scripter scripts
# ***********************************************replacer_for_python_scripter
import re,random
print callbacks.getToolName(toolFlag)
if(messageIsRequest):
if (callbacks.getToolName(toolFlag) == "Proxy" or callbacks.getToolName(toolFlag) == "Intruder" or callbacks.getToolName(toolFlag) == "Repeater"):
requestInfo = helpers.analyzeRequest(messageInfo)
headers = requestInfo.getHeaders()
msgBody = messageInfo.getRequest()[requestInfo.getBodyOffset():]
msg = helpers.bytesToString(msgBody)
1 file
0 forks
0 comments
1 star
irsdl
/ dns_data_exfiltration.sh
Created
October 13, 2020 09:49
A bash script that automates the exfiltration of data over dns in case we have a blind command execution on a server where all outbound connections except DNS are blocked.
#!/bin/bash
: '
Usage:
./dns_data_exfiltration.sh "ls -lh" #the output of "ls -lh" will be exfiltrated over dns
Todo:
1. add support for powershell
something like the following should do the trick but haven't tested it:
outer_cmd_template="powershell -enc %CMD_B64%"
NewerOlder
Footer
Â© 2025 GitHub,Â Inc.
Footer navigation
Terms
Privacy
Security
Status
Community
Docs
Contact
Manage cookies
Do not share my personal information
You canâ€™t perform that action at this time.