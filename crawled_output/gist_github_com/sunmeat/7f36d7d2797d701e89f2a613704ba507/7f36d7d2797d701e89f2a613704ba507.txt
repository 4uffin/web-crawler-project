CompletableFuture · GitHub
Skip to content
Search Gists
Search Gists
All gists
Back to GitHub
Sign in
Sign up
Sign in
Sign up
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
You switched accounts on another tab or window. Reload to refresh your session.
Dismiss alert
Instantly share code, notes, and snippets.
sunmeat/Program.java
Created
September 18, 2025 05:11
Show Gist options
Download ZIP
Star
1
(1)
You must be signed in to star a gist
Fork
0
(0)
You must be signed in to fork a gist
Embed
Embed
Embed this gist in your website.
Share
Copy sharable link for this gist.
Clone via HTTPS
Clone using the web URL.
Learn more about clone URLs
Clone this repository at &lt;script src=&quot;https://gist.github.com/sunmeat/7f36d7d2797d701e89f2a613704ba507.js&quot;&gt;&lt;/script&gt;
Save sunmeat/7f36d7d2797d701e89f2a613704ba507 to your computer and use it in GitHub Desktop.
Code
Revisions
1
Stars
1
Embed
Embed
Embed this gist in your website.
Share
Copy sharable link for this gist.
Clone via HTTPS
Clone using the web URL.
Learn more about clone URLs
Clone this repository at &lt;script src=&quot;https://gist.github.com/sunmeat/7f36d7d2797d701e89f2a613704ba507.js&quot;&gt;&lt;/script&gt;
Save sunmeat/7f36d7d2797d701e89f2a613704ba507 to your computer and use it in GitHub Desktop.
Download ZIP
CompletableFuture
Raw
Program.java
package helloworld;
import java.util.concurrent.CompletableFuture;
import java.util.concurrent.TimeUnit;
public class Program {
public static void main(String[] args) throws Exception {
System.out.println("Водій Валєрій сідає за кермо жовтого автобуса Богдан і починає поїздку.");
// запускаємо основне завдання керування асинхронно
CompletableFuture<Void> driveFuture = CompletableFuture.runAsync(Program::driveAsync);
// асинхронно запускаємо інші дії
CompletableFuture<Void> phoneFuture = CompletableFuture.runAsync(Program::talkOnPhoneAsync);
CompletableFuture<Void> coffeeFuture = CompletableFuture.runAsync(Program::drinkCoffeeAsync);
CompletableFuture<Integer> fareFuture = CompletableFuture.supplyAsync(() -> takeFareAsync(35, 100));
// чекаємо завершення всіх додаткових дій (аналог Task.WhenAll)
CompletableFuture.allOf(phoneFuture, coffeeFuture, fareFuture).join();
// отримуємо результат задачі з рештою
int change = fareFuture.get();
System.out.println("Решта видана: " + change + " грн.");
// чекаємо завершення основного керування
driveFuture.get();
System.out.println("Поїздка завершена. Водій Валєрій паркує автобус.");
}
// симуляція керування автобусом
private static void driveAsync() {
for (int i = 0; i < 5; i++) {
System.out.println("Валєрій керує жовтим скрипучим Богданом по Одесі...");
try {
TimeUnit.MILLISECONDS.sleep(1000);
} catch (InterruptedException e) {
Thread.currentThread().interrupt();
}
}
}
// розмови по телефону
private static void talkOnPhoneAsync() {
try {
TimeUnit.MILLISECONDS.sleep(1500); // затримка для імітації розмови
System.out.println("Валєрій говорить по телефону: 'Алло, шо там у вас?'");
} catch (InterruptedException e) {
Thread.currentThread().interrupt();
}
}
// пиття кави
private static void drinkCoffeeAsync() {
try {
TimeUnit.MILLISECONDS.sleep(2000);
System.out.println("Валєрій задоволено сьорбає кохве.");
} catch (InterruptedException e) {
Thread.currentThread().interrupt();
}
}
// взяття грошей за проїзд з поверненням решти
private static int takeFareAsync(int fare, int paid) {
try {
TimeUnit.MILLISECONDS.sleep(1200);
int change = paid - fare;
System.out.println("Водій взяв " + paid + " грн за проїзд " + fare + " грн і видає решту.");
return change;
} catch (InterruptedException e) {
Thread.currentThread().interrupt();
return 0;
}
}
}
Sign up for free
to join this conversation on GitHub.
Already have an account?
Sign in to comment
Footer
© 2025 GitHub, Inc.
Footer navigation
Terms
Privacy
Security
Status
Community
Docs
Contact
Manage cookies
Do not share my personal information
You can’t perform that action at this time.