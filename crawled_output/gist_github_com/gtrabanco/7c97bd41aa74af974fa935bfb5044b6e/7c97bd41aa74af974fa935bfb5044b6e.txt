Object.groupBy polyfill · GitHub
Skip to content
Search Gists
Search Gists
All gists
Back to GitHub
Sign in
Sign up
Sign in
Sign up
You signed in with another tab or window. Reload to refresh your session.
You signed out in another tab or window. Reload to refresh your session.
You switched accounts on another tab or window. Reload to refresh your session.
Dismiss alert
Instantly share code, notes, and snippets.
gtrabanco/object-group-by.js
Last active
September 17, 2025 19:07
Show Gist options
Download ZIP
Star
3
(3)
You must be signed in to star a gist
Fork
2
(2)
You must be signed in to fork a gist
Embed
Embed
Embed this gist in your website.
Share
Copy sharable link for this gist.
Clone via HTTPS
Clone using the web URL.
Learn more about clone URLs
Clone this repository at &lt;script src=&quot;https://gist.github.com/gtrabanco/7c97bd41aa74af974fa935bfb5044b6e.js&quot;&gt;&lt;/script&gt;
Save gtrabanco/7c97bd41aa74af974fa935bfb5044b6e to your computer and use it in GitHub Desktop.
Code
Revisions
4
Stars
3
Forks
2
Embed
Embed
Embed this gist in your website.
Share
Copy sharable link for this gist.
Clone via HTTPS
Clone using the web URL.
Learn more about clone URLs
Clone this repository at &lt;script src=&quot;https://gist.github.com/gtrabanco/7c97bd41aa74af974fa935bfb5044b6e.js&quot;&gt;&lt;/script&gt;
Save gtrabanco/7c97bd41aa74af974fa935bfb5044b6e to your computer and use it in GitHub Desktop.
Download ZIP
Object.groupBy polyfill
Raw
object-group-by.js
const hasGroup = typeof Object.groupBy === typeof undefined || typeof Array.groupToMap === typeof undefined || typeof Array.group === typeof undefined;
if (!hasGroup) {
const groupBy = (arr, callback) => {
return arr.reduce((acc = {}, ...args) => {
const key = callback(...args);
acc[key] ??= []
acc[key].push(args[0]);
return acc;
}, {});
};
if (typeof Object.groupBy === typeof undefined) {
Object.groupBy = groupBy;
}
if (typeof Array.groupToMap === typeof undefined) {
Array.groupToMap = groupBy;
}
if (typeof Array.group === typeof undefined) {
Array.group = groupBy;
}
}
// There are better approaches using loops directly instead of reduce
// Example:
console.log(
Object.groupBy(
[1, 2, 3, 4, 5, 6],
(v) => v % 2 === 0 ? 'even': 'odd'
)
);
Copy link
mhamlet
commented
Mar 28, 2024
This should not be with prototype. Just Object.groupBy
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
Author
gtrabanco
commented
Mar 28, 2024
This should not be with prototype. Just Object.groupBy
Updated. Thank you.
Can you explain why or give a link to know the explanation? 🙏
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
mhamlet
commented
Mar 28, 2024
•
edited
Loading
Uh oh!
There was an error while loading. Please reload this page.
The original API is without prototype. Link: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/groupBy
Here is basic usage from documentation:
Object.groupBy(items, callbackFn)
Anyway, by removing prototype your code works very well. I have used it as a polyfill for Google Chrome >= v116.
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
Author
gtrabanco
commented
Mar 28, 2024
Thank you!
I also update to check first if no defined to avoid forget it as I did in my project 😅
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
jdegand
commented
Jun 11, 2024
For Safari, you need to use Array.prototype.groupToMap.
And you could also add another check for Array.prototype.group.
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
Author
gtrabanco
commented
Jun 11, 2024
const hasGroup = typeof Object.groupBy === typeof undefined || typeof Array.groupToMap === typeof undefined || typeof Array.group === typeof undefined;
if (!hasGroup) {
const groupBy = (arr, callback) => {
return arr.reduce((acc = {}, ...args) => {
const key = callback(...args);
acc[key] ??= []
acc[key].push(args[0]);
return acc;
}, {});
};
if (typeof Object.groupBy === typeof undefined) {
Object.groupBy = groupBy;
}
if (typeof Array.groupToMap === typeof undefined) {
Array.groupToMap = groupBy;
}
if (typeof Array.group === typeof undefined) {
Array.group = groupBy;
}
}
I would do it in this way @jdegand
Thanks for the info =)
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
superjose
commented
Aug 14, 2024
I think the code should negate the hasGroup condition:
const noGroup = ....
if(noGroup) {
}
As we're checking for undefined.
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
superjose
commented
Aug 14, 2024
In other words:
const noGroup = typeof Object.groupBy === typeof undefined || typeof Array.groupToMap === typeof undefined || typeof Array.group === typeof undefined;
if (noGroup) {
const groupBy = (arr, callback) => {
return arr.reduce((acc = {}, ...args) => {
const key = callback(...args);
acc[key] ??= []
acc[key].push(args[0]);
return acc;
}, {});
};
if (typeof Object.groupBy === typeof undefined) {
Object.groupBy = groupBy;
}
if (typeof Array.groupToMap === typeof undefined) {
Array.groupToMap = groupBy;
}
if (typeof Array.group === typeof undefined) {
Array.group = groupBy;
}
}
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Copy link
Author
gtrabanco
commented
Aug 14, 2024
if (typeof Object.groupBy === typeof undefined) {
Object.groupBy = groupBy;
}
This can be omitted because at least first condition must match to be inside the first if.
Sorry, something went wrong.
Uh oh!
There was an error while loading. Please reload this page.
Sign up for free
to join this conversation on GitHub.
Already have an account?
Sign in to comment
Footer
© 2025 GitHub, Inc.
Footer navigation
Terms
Privacy
Security
Status
Community
Docs
Contact
Manage cookies
Do not share my personal information
You can’t perform that action at this time.